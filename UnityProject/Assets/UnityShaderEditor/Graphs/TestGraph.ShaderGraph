%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ef5b9f0785847b04983f907c7f016a36, type: 3}
  m_Name: TestGraph
  m_EditorClassIdentifier: 
  m_MaterialOptions: {fileID: 114000010751372870}
  m_PixelGraph: {fileID: 114000010503952950}
--- !u!21 &21000011906202394
Material:
  serializedVersion: 6
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_Name: Hidden/PreviewShader/Texture_ebca1dce894a42a1b6a0bb68ee78ff27
  m_Shader: {fileID: 48000011576325190}
  m_ShaderKeywords: 
  m_LightmapFlags: 5
  m_CustomRenderQueue: -1
  stringTagMap: {}
  m_SavedProperties:
    serializedVersion: 2
    m_TexEnvs:
    - first:
        name: Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform
      second:
        m_Texture: {fileID: 2800000, guid: 4c91c938176a28e44b22f5398fd5184f, type: 3}
        m_Scale: {x: 1, y: 1}
        m_Offset: {x: 0, y: 0}
    m_Floats: []
    m_Colors: []
--- !u!21 &21000012033016274
Material:
  serializedVersion: 6
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_Name: Hidden/PreviewShader/Texture_5cae5849a2fd40bfbeb141cb5d0a1272
  m_Shader: {fileID: 48000011697123738}
  m_ShaderKeywords: 
  m_LightmapFlags: 5
  m_CustomRenderQueue: -1
  stringTagMap: {}
  m_SavedProperties:
    serializedVersion: 2
    m_TexEnvs:
    - first:
        name: Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform
      second:
        m_Texture: {fileID: 2800000, guid: 28bdf1ba8c076ef4e910b59cc1baf342, type: 3}
        m_Scale: {x: 1, y: 1}
        m_Offset: {x: 0, y: 0}
    m_Floats: []
    m_Colors: []
--- !u!21 &21000012188960002
Material:
  serializedVersion: 6
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_Name: Hidden/PreviewShader/CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output
  m_Shader: {fileID: 48000013509724362}
  m_ShaderKeywords: 
  m_LightmapFlags: 5
  m_CustomRenderQueue: -1
  stringTagMap: {}
  m_SavedProperties:
    serializedVersion: 2
    m_TexEnvs:
    - first:
        name: Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform
      second:
        m_Texture: {fileID: 2800000, guid: 28bdf1ba8c076ef4e910b59cc1baf342, type: 3}
        m_Scale: {x: 1, y: 1}
        m_Offset: {x: 0, y: 0}
    - first:
        name: Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform
      second:
        m_Texture: {fileID: 2800000, guid: 4c91c938176a28e44b22f5398fd5184f, type: 3}
        m_Scale: {x: 1, y: 1}
        m_Offset: {x: 0, y: 0}
    m_Floats: []
    m_Colors: []
--- !u!21 &21000012785307104
Material:
  serializedVersion: 6
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_Name: Graph/Hidden/PreviewShader/PixelMaster_5c6daa356f294a8399fd930402180579
  m_Shader: {fileID: 48000010157997568}
  m_ShaderKeywords: 
  m_LightmapFlags: 5
  m_CustomRenderQueue: -1
  stringTagMap: {}
  m_SavedProperties:
    serializedVersion: 2
    m_TexEnvs:
    - first:
        name: Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform
      second:
        m_Texture: {fileID: 2800000, guid: 28bdf1ba8c076ef4e910b59cc1baf342, type: 3}
        m_Scale: {x: 1, y: 1}
        m_Offset: {x: 0, y: 0}
    - first:
        name: Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform
      second:
        m_Texture: {fileID: 2800000, guid: 4c91c938176a28e44b22f5398fd5184f, type: 3}
        m_Scale: {x: 1, y: 1}
        m_Offset: {x: 0, y: 0}
    m_Floats: []
    m_Colors: []
--- !u!48 &48000010157997568
Shader:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_Name: 
  decompressedSize: 0
  m_SubProgramBlob: 
  m_ParsedForm:
    m_PropInfo:
      m_Props:
      - m_Name: Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform
        m_Description: Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: white
          m_TexDim: 2
      - m_Name: Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform
        m_Description: Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: white
          m_TexDim: 2
    m_SubShaders:
    - m_Passes:
      - m_Type: 0
        m_State:
          m_Name: FORWARD
          zTest:
            val: 4
            name:
              name: <noninit>
          zWrite:
            val: 1
            name:
              name: <noninit>
          alphaTest: 0
          alphaVal:
            val: 0
            name:
              name: <noninit>
          shininess:
            val: 0
            name:
              name: <noninit>
          culling:
            val: 2
            name:
              name: <noninit>
          offsetFactor:
            val: 0
            name:
              name: <noninit>
          offsetUnits:
            val: 0
            name:
              name: <noninit>
          alphaToMask:
            val: 0
            name:
              name: <noninit>
          srcBlend:
            val: 1
            name:
              name: <noninit>
          destBlend:
            val: 0
            name:
              name: <noninit>
          srcBlendAlpha:
            val: 1
            name:
              name: <noninit>
          destBlendAlpha:
            val: 0
            name:
              name: <noninit>
          blendOp:
            val: 0
            name:
              name: <noninit>
          blendOpAlpha:
            val: 0
            name:
              name: <noninit>
          colMask:
            val: 15
            name:
              name: <noninit>
          color:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1.1
              name:
                name: <noninit>
            name:
              name: <noninit>
          diffuse:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          ambient:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          specular:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          emissive:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          lighting: 0
          separateSpecular: 0
          stencilOp:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilReadMask:
            val: 255
            name:
              name: <noninit>
          stencilWriteMask:
            val: 255
            name:
              name: <noninit>
          stencilRef:
            val: 0
            name:
              name: <noninit>
          fogStart:
            val: 0
            name:
              name: unity_FogStart
          fogEnd:
            val: 0
            name:
              name: unity_FogEnd
          fogDensity:
            val: 0
            name:
              name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 0
              name:
                name: <noninit>
            name:
              name: unity_FogColor
          fogMode: -1
          gpuProgramID: 38578
          m_ColorMaterialMode: 0
          m_Channels:
            m_Channels[00]: -1
            m_Channels[01]: -1
            m_Channels[02]: -1
            m_Channels[03]: -1
            m_Channels[04]: -1
            m_Channels[05]: -1
            m_Channels[06]: -1
            m_Channels[07]: -1
            m_Channels[08]: -1
            m_Channels[09]: -1
            m_Channels[10]: -1
            m_Channels[11]: -1
            m_Channels[12]: -1
            m_Channels[13]: -1
            m_Channels[14]: -1
            m_Channels[15]: -1
            m_Channels[16]: -1
            m_Channels[17]: -1
            m_Channels[18]: -1
            m_Channels[19]: -1
            m_Channels[20]: -1
            m_Channels[21]: -1
            m_Channels[22]: -1
            m_Channels[23]: -1
            m_Channels[24]: -1
            m_Channels[25]: -1
            m_Channels[26]: -1
            m_Channels[27]: -1
            m_TargetMap: 0
            m_SourceMap: 0
          m_Tags:
            tags:
              LIGHTMODE: ForwardBase
              QUEUE: Geometry
              RenderType: Opaque
              SHADOWSUPPORT: true
          m_LOD: 200
        m_ProgramMask: 6
        m_Programs[Vertex]:
          m_SubPrograms: []
        m_Programs[Fragment]:
          m_SubPrograms: []
        m_Programs[Geometry]:
          m_SubPrograms: []
        m_Programs[Hull]:
          m_SubPrograms: []
        m_Programs[Domain]:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      - m_Type: 0
        m_State:
          m_Name: FORWARD
          zTest:
            val: 4
            name:
              name: <noninit>
          zWrite:
            val: 0
            name:
              name: <noninit>
          alphaTest: 0
          alphaVal:
            val: 0
            name:
              name: <noninit>
          shininess:
            val: 0
            name:
              name: <noninit>
          culling:
            val: 2
            name:
              name: <noninit>
          offsetFactor:
            val: 0
            name:
              name: <noninit>
          offsetUnits:
            val: 0
            name:
              name: <noninit>
          alphaToMask:
            val: 0
            name:
              name: <noninit>
          srcBlend:
            val: 1
            name:
              name: <noninit>
          destBlend:
            val: 1
            name:
              name: <noninit>
          srcBlendAlpha:
            val: 1
            name:
              name: <noninit>
          destBlendAlpha:
            val: 1
            name:
              name: <noninit>
          blendOp:
            val: 0
            name:
              name: <noninit>
          blendOpAlpha:
            val: 0
            name:
              name: <noninit>
          colMask:
            val: 15
            name:
              name: <noninit>
          color:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1.1
              name:
                name: <noninit>
            name:
              name: <noninit>
          diffuse:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          ambient:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          specular:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          emissive:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          lighting: 0
          separateSpecular: 0
          stencilOp:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilReadMask:
            val: 255
            name:
              name: <noninit>
          stencilWriteMask:
            val: 255
            name:
              name: <noninit>
          stencilRef:
            val: 0
            name:
              name: <noninit>
          fogStart:
            val: 0
            name:
              name: unity_FogStart
          fogEnd:
            val: 0
            name:
              name: unity_FogEnd
          fogDensity:
            val: 0
            name:
              name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 0
              name:
                name: <noninit>
            name:
              name: unity_FogColor
          fogMode: -1
          gpuProgramID: 120877
          m_ColorMaterialMode: 0
          m_Channels:
            m_Channels[00]: -1
            m_Channels[01]: -1
            m_Channels[02]: -1
            m_Channels[03]: -1
            m_Channels[04]: -1
            m_Channels[05]: -1
            m_Channels[06]: -1
            m_Channels[07]: -1
            m_Channels[08]: -1
            m_Channels[09]: -1
            m_Channels[10]: -1
            m_Channels[11]: -1
            m_Channels[12]: -1
            m_Channels[13]: -1
            m_Channels[14]: -1
            m_Channels[15]: -1
            m_Channels[16]: -1
            m_Channels[17]: -1
            m_Channels[18]: -1
            m_Channels[19]: -1
            m_Channels[20]: -1
            m_Channels[21]: -1
            m_Channels[22]: -1
            m_Channels[23]: -1
            m_Channels[24]: -1
            m_Channels[25]: -1
            m_Channels[26]: -1
            m_Channels[27]: -1
            m_TargetMap: 0
            m_SourceMap: 0
          m_Tags:
            tags:
              LIGHTMODE: ForwardAdd
              QUEUE: Geometry
              RenderType: Opaque
          m_LOD: 200
        m_ProgramMask: 6
        m_Programs[Vertex]:
          m_SubPrograms: []
        m_Programs[Fragment]:
          m_SubPrograms: []
        m_Programs[Geometry]:
          m_SubPrograms: []
        m_Programs[Hull]:
          m_SubPrograms: []
        m_Programs[Domain]:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      - m_Type: 0
        m_State:
          m_Name: DEFERRED
          zTest:
            val: 4
            name:
              name: <noninit>
          zWrite:
            val: 1
            name:
              name: <noninit>
          alphaTest: 0
          alphaVal:
            val: 0
            name:
              name: <noninit>
          shininess:
            val: 0
            name:
              name: <noninit>
          culling:
            val: 2
            name:
              name: <noninit>
          offsetFactor:
            val: 0
            name:
              name: <noninit>
          offsetUnits:
            val: 0
            name:
              name: <noninit>
          alphaToMask:
            val: 0
            name:
              name: <noninit>
          srcBlend:
            val: 1
            name:
              name: <noninit>
          destBlend:
            val: 0
            name:
              name: <noninit>
          srcBlendAlpha:
            val: 1
            name:
              name: <noninit>
          destBlendAlpha:
            val: 0
            name:
              name: <noninit>
          blendOp:
            val: 0
            name:
              name: <noninit>
          blendOpAlpha:
            val: 0
            name:
              name: <noninit>
          colMask:
            val: 15
            name:
              name: <noninit>
          color:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1.1
              name:
                name: <noninit>
            name:
              name: <noninit>
          diffuse:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          ambient:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          specular:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          emissive:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          lighting: 0
          separateSpecular: 0
          stencilOp:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilReadMask:
            val: 255
            name:
              name: <noninit>
          stencilWriteMask:
            val: 255
            name:
              name: <noninit>
          stencilRef:
            val: 0
            name:
              name: <noninit>
          fogStart:
            val: 0
            name:
              name: unity_FogStart
          fogEnd:
            val: 0
            name:
              name: unity_FogEnd
          fogDensity:
            val: 0
            name:
              name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 0
              name:
                name: <noninit>
            name:
              name: unity_FogColor
          fogMode: -1
          gpuProgramID: 154121
          m_ColorMaterialMode: 0
          m_Channels:
            m_Channels[00]: -1
            m_Channels[01]: -1
            m_Channels[02]: -1
            m_Channels[03]: -1
            m_Channels[04]: -1
            m_Channels[05]: -1
            m_Channels[06]: -1
            m_Channels[07]: -1
            m_Channels[08]: -1
            m_Channels[09]: -1
            m_Channels[10]: -1
            m_Channels[11]: -1
            m_Channels[12]: -1
            m_Channels[13]: -1
            m_Channels[14]: -1
            m_Channels[15]: -1
            m_Channels[16]: -1
            m_Channels[17]: -1
            m_Channels[18]: -1
            m_Channels[19]: -1
            m_Channels[20]: -1
            m_Channels[21]: -1
            m_Channels[22]: -1
            m_Channels[23]: -1
            m_Channels[24]: -1
            m_Channels[25]: -1
            m_Channels[26]: -1
            m_Channels[27]: -1
            m_TargetMap: 0
            m_SourceMap: 0
          m_Tags:
            tags:
              LIGHTMODE: Deferred
              QUEUE: Geometry
              RenderType: Opaque
          m_LOD: 200
        m_ProgramMask: 6
        m_Programs[Vertex]:
          m_SubPrograms: []
        m_Programs[Fragment]:
          m_SubPrograms: []
        m_Programs[Geometry]:
          m_SubPrograms: []
        m_Programs[Hull]:
          m_SubPrograms: []
        m_Programs[Domain]:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      - m_Type: 0
        m_State:
          m_Name: META
          zTest:
            val: 4
            name:
              name: <noninit>
          zWrite:
            val: 1
            name:
              name: <noninit>
          alphaTest: 0
          alphaVal:
            val: 0
            name:
              name: <noninit>
          shininess:
            val: 0
            name:
              name: <noninit>
          culling:
            val: 0
            name:
              name: <noninit>
          offsetFactor:
            val: 0
            name:
              name: <noninit>
          offsetUnits:
            val: 0
            name:
              name: <noninit>
          alphaToMask:
            val: 0
            name:
              name: <noninit>
          srcBlend:
            val: 1
            name:
              name: <noninit>
          destBlend:
            val: 0
            name:
              name: <noninit>
          srcBlendAlpha:
            val: 1
            name:
              name: <noninit>
          destBlendAlpha:
            val: 0
            name:
              name: <noninit>
          blendOp:
            val: 0
            name:
              name: <noninit>
          blendOpAlpha:
            val: 0
            name:
              name: <noninit>
          colMask:
            val: 15
            name:
              name: <noninit>
          color:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1.1
              name:
                name: <noninit>
            name:
              name: <noninit>
          diffuse:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          ambient:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          specular:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          emissive:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          lighting: 0
          separateSpecular: 0
          stencilOp:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilReadMask:
            val: 255
            name:
              name: <noninit>
          stencilWriteMask:
            val: 255
            name:
              name: <noninit>
          stencilRef:
            val: 0
            name:
              name: <noninit>
          fogStart:
            val: 0
            name:
              name: unity_FogStart
          fogEnd:
            val: 0
            name:
              name: unity_FogEnd
          fogDensity:
            val: 0
            name:
              name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 0
              name:
                name: <noninit>
            name:
              name: unity_FogColor
          fogMode: -1
          gpuProgramID: 244281
          m_ColorMaterialMode: 0
          m_Channels:
            m_Channels[00]: -1
            m_Channels[01]: -1
            m_Channels[02]: -1
            m_Channels[03]: -1
            m_Channels[04]: -1
            m_Channels[05]: -1
            m_Channels[06]: -1
            m_Channels[07]: -1
            m_Channels[08]: -1
            m_Channels[09]: -1
            m_Channels[10]: -1
            m_Channels[11]: -1
            m_Channels[12]: -1
            m_Channels[13]: -1
            m_Channels[14]: -1
            m_Channels[15]: -1
            m_Channels[16]: -1
            m_Channels[17]: -1
            m_Channels[18]: -1
            m_Channels[19]: -1
            m_Channels[20]: -1
            m_Channels[21]: -1
            m_Channels[22]: -1
            m_Channels[23]: -1
            m_Channels[24]: -1
            m_Channels[25]: -1
            m_Channels[26]: -1
            m_Channels[27]: -1
            m_TargetMap: 0
            m_SourceMap: 0
          m_Tags:
            tags:
              LIGHTMODE: Meta
              QUEUE: Geometry
              RenderType: Opaque
          m_LOD: 200
        m_ProgramMask: 6
        m_Programs[Vertex]:
          m_SubPrograms: []
        m_Programs[Fragment]:
          m_SubPrograms: []
        m_Programs[Geometry]:
          m_SubPrograms: []
        m_Programs[Hull]:
          m_SubPrograms: []
        m_Programs[Domain]:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      m_Tags:
        tags:
          QUEUE: Geometry
          RenderType: Opaque
      m_LOD: 200
    m_Name: Graph/Hidden/PreviewShader/PixelMaster_5c6daa356f294a8399fd930402180579
    m_CustomEditorName: 
    m_FallbackName: Diffuse
    m_Dependencies: []
    m_DisableNoSubshadersMessage: 0
  m_Dependencies:
  - {fileID: 7, guid: 0000000000000000f000000000000000, type: 0}
  - {fileID: 6, guid: 0000000000000000f000000000000000, type: 0}
  m_NonModifiableTextures: {}
  m_ShaderIsBaked: 0
  m_DefaultTextures: {}
  m_CompileInfo:
    m_Snippets:
      15965:
        m_Code: "#line 84 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line 84
          \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n#pragma
          vertex vert\n#pragma fragment frag\n#pragma target 2.0\n#pragma multi_compile_shadowcaster\n#include
          \"UnityCG.cginc\"\n\nstruct v2f { \n\tV2F_SHADOW_CASTER;\n};\n\nv2f vert(
          appdata_base v )\n{\n\tv2f o;\n\tTRANSFER_SHADOW_CASTER_NORMALOFFSET(o)\n\treturn
          o;\n}\n\nfloat4 frag( v2f i ) : SV_Target\n{\n\tSHADOW_CASTER_FRAGMENT(i)\n}\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 5bdbb5d85b2646f9bcc7c597e2e28782
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - SHADOWS_DEPTH
        - - SHADOWS_CUBE
        m_VariantsBuiltin1:
        - - SHADOWS_DEPTH
        - - SHADOWS_CUBE
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 0
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: SHADOWS_CUBE SHADOWS_DEPTH
      28951:
        m_Code: "#line 18 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          multi_compile_fog\n#pragma multi_compile_fwdbase\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          writes to per-pixel normal: no\n// writes to emission: no\n// writes to
          occlusion: no\n// needs world space reflection vector: no\n// needs world
          space normal vector: no\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: no\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: no\n// needs world space view direction
          for lightmaps: no\n// needs vertex color: no\n// needs VFACE: no\n// passes
          tangent-to-world matrix to pixel shader: no\n// reads from normal: no\n//
          1 texcoords actually used\n//   float2 _MainTex\n#define UNITY_PASS_FORWARDBASE\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n#include \"AutoLight.cginc\"\n\n#define
          INTERNAL_DATA\n#define WorldReflectionVector(data,normal) data.worldRefl\n#define
          WorldNormalVector(data,normal) normal\n\n// Original surface shader snippet:\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line 8
          \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//#pragma
          surface surf Lambert\n\nsampler2D _MainTex;\nfixed4 _Color;\n\nstruct Input
          {\n\tfloat2 uv_MainTex;\n};\n\nvoid surf (Input IN, inout SurfaceOutput
          o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex) * _Color;\n\to.Albedo
          = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment interpolation data\n//
          no lightmaps:\n#ifdef LIGHTMAP_OFF\nstruct v2f_surf {\n  float4 pos : SV_POSITION;\n
          \ float2 pack0 : TEXCOORD0; // _MainTex\n  half3 worldNormal : TEXCOORD1;\n
          \ float3 worldPos : TEXCOORD2;\n  #if UNITY_SHOULD_SAMPLE_SH\n  half3 sh
          : TEXCOORD3; // SH\n  #endif\n  SHADOW_COORDS(4)\n  UNITY_FOG_COORDS(5)\n
          \ #if SHADER_TARGET >= 30\n  float4 lmap : TEXCOORD6;\n  #endif\n  UNITY_INSTANCE_ID\n};\n#endif\n//
          with lightmaps:\n#ifndef LIGHTMAP_OFF\nstruct v2f_surf {\n  float4 pos :
          SV_POSITION;\n  float2 pack0 : TEXCOORD0; // _MainTex\n  half3 worldNormal
          : TEXCOORD1;\n  float3 worldPos : TEXCOORD2;\n  float4 lmap : TEXCOORD3;\n
          \ SHADOW_COORDS(4)\n  UNITY_FOG_COORDS(5)\n  #ifdef DIRLIGHTMAP_COMBINED\n
          \ fixed3 tSpace0 : TEXCOORD6;\n  fixed3 tSpace1 : TEXCOORD7;\n  fixed3 tSpace2
          : TEXCOORD8;\n  #endif\n  UNITY_INSTANCE_ID\n};\n#endif\nfloat4 _MainTex_ST;\n\n//
          vertex shader\nv2f_surf vert_surf (appdata_full v) {\n  UNITY_SETUP_INSTANCE_ID(v);\n
          \ v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n  UNITY_TRANSFER_INSTANCE_ID(v,o);\n
          \ o.pos = UnityObjectToClipPos(v.vertex);\n  o.pack0.xy = TRANSFORM_TEX(v.texcoord,
          _MainTex);\n  float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n
          \ fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n  #if !defined(LIGHTMAP_OFF)
          && defined(DIRLIGHTMAP_COMBINED)\n  fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);\n
          \ fixed tangentSign = v.tangent.w * unity_WorldTransformParams.w;\n  fixed3
          worldBinormal = cross(worldNormal, worldTangent) * tangentSign;\n  #endif\n
          \ #if !defined(LIGHTMAP_OFF) && defined(DIRLIGHTMAP_COMBINED)\n  o.tSpace0
          = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n
          \ o.tSpace1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n
          \ o.tSpace2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n
          \ #endif\n  o.worldPos = worldPos;\n  o.worldNormal = worldNormal;\n  #ifndef
          DYNAMICLIGHTMAP_OFF\n  o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy
          + unity_DynamicLightmapST.zw;\n  #endif\n  #ifndef LIGHTMAP_OFF\n  o.lmap.xy
          = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n  #endif\n\n
          \ // SH/ambient and vertex lights\n  #ifdef LIGHTMAP_OFF\n    #if UNITY_SHOULD_SAMPLE_SH\n
          \     o.sh = 0;\n      // Approximated illumination from non-important point
          lights\n      #ifdef VERTEXLIGHT_ON\n        o.sh += Shade4PointLights (\n
          \         unity_4LightPosX0, unity_4LightPosY0, unity_4LightPosZ0,\n          unity_LightColor[0].rgb,
          unity_LightColor[1].rgb, unity_LightColor[2].rgb, unity_LightColor[3].rgb,\n
          \         unity_4LightAtten0, worldPos, worldNormal);\n      #endif\n      o.sh
          = ShadeSHPerVertex (worldNormal, o.sh);\n    #endif\n  #endif // LIGHTMAP_OFF\n\n
          \ TRANSFER_SHADOW(o); // pass shadow coordinates to pixel shader\n  UNITY_TRANSFER_FOG(o,o.pos);
          // pass fog coordinates to pixel shader\n  return o;\n}\n\n// fragment shader\nfixed4
          frag_surf (v2f_surf IN) : SV_Target {\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.uv_MainTex.x = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutput
          o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput o;\n  #endif\n  o.Albedo
          = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n  o.Alpha = 0.0;\n  o.Gloss
          = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n  o.Normal = IN.worldNormal;\n
          \ normalWorldVertex = IN.worldNormal;\n\n  // call surface function\n  surf
          (surfIN, o);\n\n  // compute lighting & shadowing factor\n  UNITY_LIGHT_ATTENUATION(atten,
          IN, worldPos)\n  fixed4 c = 0;\n\n  // Setup lighting environment\n  UnityGI
          gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI, gi);\n  gi.indirect.diffuse = 0;\n
          \ gi.indirect.specular = 0;\n  #if !defined(LIGHTMAP_ON)\n      gi.light.color
          = _LightColor0.rgb;\n      gi.light.dir = lightDir;\n  #endif\n  // Call
          GI (lightmaps/SH/reflections) lighting function\n  UnityGIInput giInput;\n
          \ UNITY_INITIALIZE_OUTPUT(UnityGIInput, giInput);\n  giInput.light = gi.light;\n
          \ giInput.worldPos = worldPos;\n  giInput.atten = atten;\n  #if defined(LIGHTMAP_ON)
          || defined(DYNAMICLIGHTMAP_ON)\n    giInput.lightmapUV = IN.lmap;\n  #else\n
          \   giInput.lightmapUV = 0.0;\n  #endif\n  #if UNITY_SHOULD_SAMPLE_SH\n
          \   giInput.ambient = IN.sh;\n  #else\n    giInput.ambient.rgb = 0.0;\n
          \ #endif\n  giInput.probeHDR[0] = unity_SpecCube0_HDR;\n  giInput.probeHDR[1]
          = unity_SpecCube1_HDR;\n  LightingLambert_GI(o, giInput, gi);\n\n  // realtime
          lighting: call lighting function\n  c += LightingLambert (o, gi);\n  UNITY_APPLY_FOG(IN.fogCoord,
          c); // apply fog\n  UNITY_OPAQUE_ALPHA(c.a);\n  return c;\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: da2c22a5e29eb1c4cbc2662c52ec362f
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        m_VariantsBuiltin1:
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRECTIONAL DIRLIGHTMAP_COMBINED DIRLIGHTMAP_OFF DIRLIGHTMAP_SEPARATE
          DYNAMICLIGHTMAP_OFF DYNAMICLIGHTMAP_ON LIGHTMAP_OFF LIGHTMAP_ON SHADOWS_OFF
          SHADOWS_SCREEN VERTEXLIGHT_ON
      38578:
        m_Code: "#line 36 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          target 3.0\n#pragma glsl\n#pragma debug\n#pragma multi_compile_fog\n#pragma
          multi_compile_fwdbase\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n//
          Surface shader code generated based on:\n// vertex modifier: 'vert'\n//
          writes to per-pixel normal: no\n// writes to emission: no\n// writes to
          occlusion: no\n// needs world space reflection vector: no\n// needs world
          space normal vector: no\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: no\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: YES\n// needs world space view
          direction for lightmaps: no\n// needs vertex color: no\n// needs VFACE:
          no\n// passes tangent-to-world matrix to pixel shader: no\n// reads from
          normal: no\n// 0 texcoords actually used\n#define UNITY_PASS_FORWARDBASE\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n#include \"UnityPBSLighting.cginc\"\n#include
          \"AutoLight.cginc\"\n\n#define INTERNAL_DATA\n#define WorldReflectionVector(data,normal)
          data.worldRefl\n#define WorldNormalVector(data,normal) normal\n\n// Original
          surface shader snippet:\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line
          26 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n\t\t//#pragma
          target 3.0\n\t\t//#pragma surface surf Standard vertex:vert\n\t\t//#pragma
          glsl\n\t\t//#pragma debug\n\n\n\n\t\tinline half4 unity_combine_darken_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn min(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_mul_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 * arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cburn_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn 1 - (1-arg1)/(arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_lburn_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 + arg2 - 1;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_lighten_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn max(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_screen_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          1- (1-arg1) * (1-arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cdodge_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1/(1-arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_ldodge_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 + arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_overlay_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg1 < 0.5)? arg1*arg2*2:
          1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_softl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (1-arg1)*arg1*arg2 + arg1*(1-
          (1-arg1)*(1-arg2));\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_hardl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? arg1*arg2*2:
          1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_vividl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? 1- (1-arg1)/(2*arg2+1e-5):
          arg1/(1-2*(arg2-0.5)+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_linearl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? arg1+(2*arg2)-1:
          arg1+2*(arg2-0.5);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_pinl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? min(arg1,
          2*arg2): max(arg1, 2*(arg2-0.5));\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_hardmix_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 1-arg1)? half(0):half(1);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_diff_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          abs(arg2-arg1);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_excl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 + arg2 - arg1*arg2*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_sub_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          max(arg2-arg1, 0.0);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_div_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 / (arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\n\n\t\tsampler2D
          Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform;\r\n\t\tsampler2D Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform;\r\n\n\n\t\tstruct
          Input \n\t\t{\n\t\t\thalf4 meshUV0;\r\n\n\t\t};\n\n\t\tvoid vert (inout
          appdata_full v, out Input o)\n\t\t{\n\t\t\tUNITY_INITIALIZE_OUTPUT(Input,o);\n\t\t\to.meshUV0
          = v.texcoord;\r\n\n\t\t}\n\t  \n\t\tvoid surf (Input IN, inout SurfaceOutputStandard
          o) \n\t\t{\n\t\t\tfloat4 Texture_5cae5849a2fd40bfbeb141cb5d0a1272 = tex2D
          (Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform, IN.meshUV0.xy);\r\n\t\t\tfloat4
          Texture_ebca1dce894a42a1b6a0bb68ee78ff27 = tex2D (Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform,
          IN.meshUV0.xy);\r\n\t\t\thalf4 CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output
          = unity_combine_softl_half (Texture_5cae5849a2fd40bfbeb141cb5d0a1272, Texture_ebca1dce894a42a1b6a0bb68ee78ff27);\r\n\t\t\to.Albedo
          = CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output;\r\n\n\t\t}\n\t\t\n\n//
          vertex-to-fragment interpolation data\n// no lightmaps:\n#ifdef LIGHTMAP_OFF\nstruct
          v2f_surf {\n  float4 pos : SV_POSITION;\n  half3 worldNormal : TEXCOORD0;\n
          \ float3 worldPos : TEXCOORD1;\n  half4 custompack0 : TEXCOORD2; // meshUV0\n
          \ #if UNITY_SHOULD_SAMPLE_SH\n  half3 sh : TEXCOORD3; // SH\n  #endif\n
          \ SHADOW_COORDS(4)\n  UNITY_FOG_COORDS(5)\n  #if SHADER_TARGET >= 30\n  float4
          lmap : TEXCOORD6;\n  #endif\n  UNITY_INSTANCE_ID\n};\n#endif\n// with lightmaps:\n#ifndef
          LIGHTMAP_OFF\nstruct v2f_surf {\n  float4 pos : SV_POSITION;\n  half3 worldNormal
          : TEXCOORD0;\n  float3 worldPos : TEXCOORD1;\n  half4 custompack0 : TEXCOORD2;
          // meshUV0\n  float4 lmap : TEXCOORD3;\n  SHADOW_COORDS(4)\n  UNITY_FOG_COORDS(5)\n
          \ #ifdef DIRLIGHTMAP_COMBINED\n  fixed3 tSpace0 : TEXCOORD6;\n  fixed3 tSpace1
          : TEXCOORD7;\n  fixed3 tSpace2 : TEXCOORD8;\n  #endif\n  UNITY_INSTANCE_ID\n};\n#endif\n\n//
          vertex shader\nv2f_surf vert_surf (appdata_full v) {\n  UNITY_SETUP_INSTANCE_ID(v);\n
          \ v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n  UNITY_TRANSFER_INSTANCE_ID(v,o);\n
          \ Input customInputData;\n  vert (v, customInputData);\n  o.custompack0.xyzw
          = customInputData.meshUV0;\n  o.pos = UnityObjectToClipPos(v.vertex);\n
          \ float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n  fixed3 worldNormal
          = UnityObjectToWorldNormal(v.normal);\n  #if !defined(LIGHTMAP_OFF) && defined(DIRLIGHTMAP_COMBINED)\n
          \ fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);\n  fixed tangentSign
          = v.tangent.w * unity_WorldTransformParams.w;\n  fixed3 worldBinormal =
          cross(worldNormal, worldTangent) * tangentSign;\n  #endif\n  #if !defined(LIGHTMAP_OFF)
          && defined(DIRLIGHTMAP_COMBINED)\n  o.tSpace0 = float4(worldTangent.x, worldBinormal.x,
          worldNormal.x, worldPos.x);\n  o.tSpace1 = float4(worldTangent.y, worldBinormal.y,
          worldNormal.y, worldPos.y);\n  o.tSpace2 = float4(worldTangent.z, worldBinormal.z,
          worldNormal.z, worldPos.z);\n  #endif\n  o.worldPos = worldPos;\n  o.worldNormal
          = worldNormal;\n  #ifndef DYNAMICLIGHTMAP_OFF\n  o.lmap.zw = v.texcoord2.xy
          * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;\n  #endif\n  #ifndef
          LIGHTMAP_OFF\n  o.lmap.xy = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n
          \ #endif\n\n  // SH/ambient and vertex lights\n  #ifdef LIGHTMAP_OFF\n    #if
          UNITY_SHOULD_SAMPLE_SH\n      o.sh = 0;\n      // Approximated illumination
          from non-important point lights\n      #ifdef VERTEXLIGHT_ON\n        o.sh
          += Shade4PointLights (\n          unity_4LightPosX0, unity_4LightPosY0,
          unity_4LightPosZ0,\n          unity_LightColor[0].rgb, unity_LightColor[1].rgb,
          unity_LightColor[2].rgb, unity_LightColor[3].rgb,\n          unity_4LightAtten0,
          worldPos, worldNormal);\n      #endif\n      o.sh = ShadeSHPerVertex (worldNormal,
          o.sh);\n    #endif\n  #endif // LIGHTMAP_OFF\n\n  TRANSFER_SHADOW(o); //
          pass shadow coordinates to pixel shader\n  UNITY_TRANSFER_FOG(o,o.pos);
          // pass fog coordinates to pixel shader\n  return o;\n}\n\n// fragment shader\nfixed4
          frag_surf (v2f_surf IN) : SV_Target {\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.meshUV0.x = 1.0;\n  surfIN.meshUV0 = IN.custompack0.xyzw;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  fixed3 worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n
          \ #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutputStandard o = (SurfaceOutputStandard)0;\n
          \ #else\n  SurfaceOutputStandard o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission
          = 0.0;\n  o.Alpha = 0.0;\n  o.Occlusion = 1.0;\n  fixed3 normalWorldVertex
          = fixed3(0,0,1);\n  o.Normal = IN.worldNormal;\n  normalWorldVertex = IN.worldNormal;\n\n
          \ // call surface function\n  surf (surfIN, o);\n\n  // compute lighting
          & shadowing factor\n  UNITY_LIGHT_ATTENUATION(atten, IN, worldPos)\n  fixed4
          c = 0;\n\n  // Setup lighting environment\n  UnityGI gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI,
          gi);\n  gi.indirect.diffuse = 0;\n  gi.indirect.specular = 0;\n  #if !defined(LIGHTMAP_ON)\n
          \     gi.light.color = _LightColor0.rgb;\n      gi.light.dir = lightDir;\n
          \ #endif\n  // Call GI (lightmaps/SH/reflections) lighting function\n  UnityGIInput
          giInput;\n  UNITY_INITIALIZE_OUTPUT(UnityGIInput, giInput);\n  giInput.light
          = gi.light;\n  giInput.worldPos = worldPos;\n  giInput.worldViewDir = worldViewDir;\n
          \ giInput.atten = atten;\n  #if defined(LIGHTMAP_ON) || defined(DYNAMICLIGHTMAP_ON)\n
          \   giInput.lightmapUV = IN.lmap;\n  #else\n    giInput.lightmapUV = 0.0;\n
          \ #endif\n  #if UNITY_SHOULD_SAMPLE_SH\n    giInput.ambient = IN.sh;\n  #else\n
          \   giInput.ambient.rgb = 0.0;\n  #endif\n  giInput.probeHDR[0] = unity_SpecCube0_HDR;\n
          \ giInput.probeHDR[1] = unity_SpecCube1_HDR;\n  LightingStandard_GI(o, giInput,
          gi);\n\n  // realtime lighting: call lighting function\n  c += LightingStandard
          (o, worldViewDir, gi);\n  UNITY_APPLY_FOG(IN.fogCoord, c); // apply fog\n
          \ UNITY_OPAQUE_ALPHA(c.a);\n  return c;\n}\n\n"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 3bf0c61e588ab671ad48d6fc472ca3fc
        m_IsGLSL: 0
        m_FromOther: 0
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
          - VERTEXLIGHT_ON
        m_VariantsBuiltin1:
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_OFF
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - SHADOWS_SCREEN
        - - DIRECTIONAL
          - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - SHADOWS_SCREEN
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 2
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRECTIONAL DIRLIGHTMAP_COMBINED DIRLIGHTMAP_OFF DIRLIGHTMAP_SEPARATE
          DYNAMICLIGHTMAP_OFF DYNAMICLIGHTMAP_ON LIGHTMAP_OFF LIGHTMAP_ON SHADOWS_OFF
          SHADOWS_SCREEN VERTEXLIGHT_ON
      115501:
        m_Code: "#line 194 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          multi_compile_fog\n#pragma multi_compile_fwdadd\n#pragma skip_variants INSTANCING_ON\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n// Surface
          shader code generated based on:\n// writes to per-pixel normal: no\n// writes
          to emission: no\n// writes to occlusion: no\n// needs world space reflection
          vector: no\n// needs world space normal vector: no\n// needs screen space
          position: no\n// needs world space position: no\n// needs view direction:
          no\n// needs world space view direction: no\n// needs world space position
          for lighting: YES\n// needs world space view direction for lighting: no\n//
          needs world space view direction for lightmaps: no\n// needs vertex color:
          no\n// needs VFACE: no\n// passes tangent-to-world matrix to pixel shader:
          no\n// reads from normal: no\n// 1 texcoords actually used\n//   float2
          _MainTex\n#define UNITY_PASS_FORWARDADD\n#include \"UnityCG.cginc\"\n#include
          \"Lighting.cginc\"\n#include \"AutoLight.cginc\"\n\n#define INTERNAL_DATA\n#define
          WorldReflectionVector(data,normal) data.worldRefl\n#define WorldNormalVector(data,normal)
          normal\n\n// Original surface shader snippet:\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n#line 8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//#pragma
          surface surf Lambert\n\nsampler2D _MainTex;\nfixed4 _Color;\n\nstruct Input
          {\n\tfloat2 uv_MainTex;\n};\n\nvoid surf (Input IN, inout SurfaceOutput
          o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex) * _Color;\n\to.Albedo
          = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment interpolation data\nstruct
          v2f_surf {\n  float4 pos : SV_POSITION;\n  float2 pack0 : TEXCOORD0; //
          _MainTex\n  half3 worldNormal : TEXCOORD1;\n  float3 worldPos : TEXCOORD2;\n
          \ SHADOW_COORDS(3)\n  UNITY_FOG_COORDS(4)\n};\nfloat4 _MainTex_ST;\n\n//
          vertex shader\nv2f_surf vert_surf (appdata_full v) {\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ o.pos = UnityObjectToClipPos(v.vertex);\n  o.pack0.xy = TRANSFORM_TEX(v.texcoord,
          _MainTex);\n  float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n
          \ fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n  o.worldPos
          = worldPos;\n  o.worldNormal = worldNormal;\n\n  TRANSFER_SHADOW(o); //
          pass shadow coordinates to pixel shader\n  UNITY_TRANSFER_FOG(o,o.pos);
          // pass fog coordinates to pixel shader\n  return o;\n}\n\n// fragment shader\nfixed4
          frag_surf (v2f_surf IN) : SV_Target {\n  // prepare and unpack data\n  Input
          surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n  surfIN.uv_MainTex.x
          = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3 worldPos = IN.worldPos;\n
          \ #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n
          \ #else\n    fixed3 lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef
          UNITY_COMPILER_HLSL\n  SurfaceOutput o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput
          o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n
          \ o.Alpha = 0.0;\n  o.Gloss = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n
          \ o.Normal = IN.worldNormal;\n  normalWorldVertex = IN.worldNormal;\n\n
          \ // call surface function\n  surf (surfIN, o);\n  UNITY_LIGHT_ATTENUATION(atten,
          IN, worldPos)\n  fixed4 c = 0;\n\n  // Setup lighting environment\n  UnityGI
          gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI, gi);\n  gi.indirect.diffuse = 0;\n
          \ gi.indirect.specular = 0;\n  #if !defined(LIGHTMAP_ON)\n      gi.light.color
          = _LightColor0.rgb;\n      gi.light.dir = lightDir;\n  #endif\n  gi.light.color
          *= atten;\n  c += LightingLambert (o, gi);\n  c.a = 0.0;\n  UNITY_APPLY_FOG(IN.fogCoord,
          c); // apply fog\n  UNITY_OPAQUE_ALPHA(c.a);\n  return c;\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: da2c22a5e29eb1c4cbc2662c52ec362f
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - POINT
        - - DIRECTIONAL
        - - SPOT
        - - POINT_COOKIE
        - - DIRECTIONAL_COOKIE
        m_VariantsBuiltin1:
        - - POINT
        - - DIRECTIONAL
        - - SPOT
        - - POINT_COOKIE
        - - DIRECTIONAL_COOKIE
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRECTIONAL DIRECTIONAL_COOKIE POINT POINT_COOKIE SPOT
      120877:
        m_Code: "#line 329 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          target 3.0\n#pragma glsl\n#pragma debug\n#pragma multi_compile_fog\n#pragma
          multi_compile_fwdadd\n#pragma skip_variants INSTANCING_ON\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          vertex modifier: 'vert'\n// writes to per-pixel normal: no\n// writes to
          emission: no\n// writes to occlusion: no\n// needs world space reflection
          vector: no\n// needs world space normal vector: no\n// needs screen space
          position: no\n// needs world space position: no\n// needs view direction:
          no\n// needs world space view direction: no\n// needs world space position
          for lighting: YES\n// needs world space view direction for lighting: YES\n//
          needs world space view direction for lightmaps: no\n// needs vertex color:
          no\n// needs VFACE: no\n// passes tangent-to-world matrix to pixel shader:
          no\n// reads from normal: no\n// 0 texcoords actually used\n#define UNITY_PASS_FORWARDADD\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n#include \"UnityPBSLighting.cginc\"\n#include
          \"AutoLight.cginc\"\n\n#define INTERNAL_DATA\n#define WorldReflectionVector(data,normal)
          data.worldRefl\n#define WorldNormalVector(data,normal) normal\n\n// Original
          surface shader snippet:\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line
          26 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n\t\t//#pragma
          target 3.0\n\t\t//#pragma surface surf Standard vertex:vert\n\t\t//#pragma
          glsl\n\t\t//#pragma debug\n\n\n\n\t\tinline half4 unity_combine_darken_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn min(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_mul_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 * arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cburn_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn 1 - (1-arg1)/(arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_lburn_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 + arg2 - 1;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_lighten_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn max(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_screen_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          1- (1-arg1) * (1-arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cdodge_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1/(1-arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_ldodge_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 + arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_overlay_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg1 < 0.5)? arg1*arg2*2:
          1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_softl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (1-arg1)*arg1*arg2 + arg1*(1-
          (1-arg1)*(1-arg2));\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_hardl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? arg1*arg2*2:
          1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_vividl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? 1- (1-arg1)/(2*arg2+1e-5):
          arg1/(1-2*(arg2-0.5)+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_linearl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? arg1+(2*arg2)-1:
          arg1+2*(arg2-0.5);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_pinl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? min(arg1,
          2*arg2): max(arg1, 2*(arg2-0.5));\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_hardmix_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 1-arg1)? half(0):half(1);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_diff_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          abs(arg2-arg1);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_excl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 + arg2 - arg1*arg2*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_sub_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          max(arg2-arg1, 0.0);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_div_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 / (arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\n\n\t\tsampler2D
          Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform;\r\n\t\tsampler2D Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform;\r\n\n\n\t\tstruct
          Input \n\t\t{\n\t\t\thalf4 meshUV0;\r\n\n\t\t};\n\n\t\tvoid vert (inout
          appdata_full v, out Input o)\n\t\t{\n\t\t\tUNITY_INITIALIZE_OUTPUT(Input,o);\n\t\t\to.meshUV0
          = v.texcoord;\r\n\n\t\t}\n\t  \n\t\tvoid surf (Input IN, inout SurfaceOutputStandard
          o) \n\t\t{\n\t\t\tfloat4 Texture_5cae5849a2fd40bfbeb141cb5d0a1272 = tex2D
          (Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform, IN.meshUV0.xy);\r\n\t\t\tfloat4
          Texture_ebca1dce894a42a1b6a0bb68ee78ff27 = tex2D (Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform,
          IN.meshUV0.xy);\r\n\t\t\thalf4 CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output
          = unity_combine_softl_half (Texture_5cae5849a2fd40bfbeb141cb5d0a1272, Texture_ebca1dce894a42a1b6a0bb68ee78ff27);\r\n\t\t\to.Albedo
          = CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output;\r\n\n\t\t}\n\t\t\n\n//
          vertex-to-fragment interpolation data\nstruct v2f_surf {\n  float4 pos :
          SV_POSITION;\n  half3 worldNormal : TEXCOORD0;\n  float3 worldPos : TEXCOORD1;\n
          \ half4 custompack0 : TEXCOORD2; // meshUV0\n  SHADOW_COORDS(3)\n  UNITY_FOG_COORDS(4)\n};\n\n//
          vertex shader\nv2f_surf vert_surf (appdata_full v) {\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ Input customInputData;\n  vert (v, customInputData);\n  o.custompack0.xyzw
          = customInputData.meshUV0;\n  o.pos = UnityObjectToClipPos(v.vertex);\n
          \ float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n  fixed3 worldNormal
          = UnityObjectToWorldNormal(v.normal);\n  o.worldPos = worldPos;\n  o.worldNormal
          = worldNormal;\n\n  TRANSFER_SHADOW(o); // pass shadow coordinates to pixel
          shader\n  UNITY_TRANSFER_FOG(o,o.pos); // pass fog coordinates to pixel
          shader\n  return o;\n}\n\n// fragment shader\nfixed4 frag_surf (v2f_surf
          IN) : SV_Target {\n  // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.meshUV0.x = 1.0;\n  surfIN.meshUV0 = IN.custompack0.xyzw;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  fixed3 worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n
          \ #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutputStandard o = (SurfaceOutputStandard)0;\n
          \ #else\n  SurfaceOutputStandard o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission
          = 0.0;\n  o.Alpha = 0.0;\n  o.Occlusion = 1.0;\n  fixed3 normalWorldVertex
          = fixed3(0,0,1);\n  o.Normal = IN.worldNormal;\n  normalWorldVertex = IN.worldNormal;\n\n
          \ // call surface function\n  surf (surfIN, o);\n  UNITY_LIGHT_ATTENUATION(atten,
          IN, worldPos)\n  fixed4 c = 0;\n\n  // Setup lighting environment\n  UnityGI
          gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI, gi);\n  gi.indirect.diffuse = 0;\n
          \ gi.indirect.specular = 0;\n  #if !defined(LIGHTMAP_ON)\n      gi.light.color
          = _LightColor0.rgb;\n      gi.light.dir = lightDir;\n  #endif\n  gi.light.color
          *= atten;\n  c += LightingStandard (o, worldViewDir, gi);\n  c.a = 0.0;\n
          \ UNITY_APPLY_FOG(IN.fogCoord, c); // apply fog\n  UNITY_OPAQUE_ALPHA(c.a);\n
          \ return c;\n}\n\n"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 3bf0c61e588ab671ad48d6fc472ca3fc
        m_IsGLSL: 0
        m_FromOther: 0
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - POINT
        - - DIRECTIONAL
        - - SPOT
        - - POINT_COOKIE
        - - DIRECTIONAL_COOKIE
        m_VariantsBuiltin1:
        - - POINT
        - - DIRECTIONAL
        - - SPOT
        - - POINT_COOKIE
        - - DIRECTIONAL_COOKIE
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 2
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRECTIONAL DIRECTIONAL_COOKIE POINT POINT_COOKIE SPOT
      125368:
        m_Code: "#pragma vertex vert\n#pragma fragment frag\n#pragma target 2.0\n#include
          \"UnityCG.cginc\"\n#pragma multi_compile_fog\n#define USING_FOG (defined(FOG_LINEAR)
          || defined(FOG_EXP) || defined(FOG_EXP2))\n\n// ES2.0/WebGL/3DS can not
          do loops with non-constant-expression iteration counts :(\n#if defined(SHADER_API_GLES)\n
          \ #define LIGHT_LOOP_LIMIT 8\n#elif defined(SHADER_API_N3DS)\n  #define
          LIGHT_LOOP_LIMIT 4\n#else\n  #define LIGHT_LOOP_LIMIT unity_VertexLightParams.x\n#endif\n#define
          ENABLE_SPECULAR (!defined(SHADER_API_N3DS))\n\n// Compile specialized variants
          for when positional (point/spot) and spot lights are present\n#pragma multi_compile
          __ POINT SPOT\n\n// Compute illumination from one light, given attenuation\nhalf3
          computeLighting (int idx, half3 dirToLight, half3 eyeNormal, half3 viewDir,
          half4 diffuseColor, half shininess, half atten, inout half3 specColor) {\n
          \ half NdotL = max(dot(eyeNormal, dirToLight), 0.0);\n  // diffuse\n  half3
          color = NdotL * diffuseColor.rgb * unity_LightColor[idx].rgb;\n  // specular\n
          \ if (NdotL > 0.0) {\n    half3 h = normalize(dirToLight + viewDir);\n    half
          HdotN = max(dot(eyeNormal, h), 0.0);\n    half sp = saturate(pow(HdotN,
          shininess));\n    specColor += (atten * sp) * unity_LightColor[idx].rgb;\n
          \ }\n  return color * atten;\n}\n\n// Compute attenuation & illumination
          from one light\nhalf3 computeOneLight(int idx, float3 eyePosition, half3
          eyeNormal, half3 viewDir, half4 diffuseColor, half shininess, inout half3
          specColor) {\n  float3 dirToLight = unity_LightPosition[idx].xyz;\n  half
          att = 1.0;\n  #if defined(POINT) || defined(SPOT)\n    dirToLight -= eyePosition
          * unity_LightPosition[idx].w;\n    // distance attenuation\n    float distSqr
          = dot(dirToLight, dirToLight);\n    att /= (1.0 + unity_LightAtten[idx].z
          * distSqr);\n    if (unity_LightPosition[idx].w != 0 && distSqr > unity_LightAtten[idx].w)
          att = 0.0; // set to 0 if outside of range\n    dirToLight *= rsqrt(distSqr);\n
          \   #if defined(SPOT)\n      // spot angle attenuation\n      half rho =
          max(dot(dirToLight, unity_SpotDirection[idx].xyz), 0.0);\n      half spotAtt
          = (rho - unity_LightAtten[idx].x) * unity_LightAtten[idx].y;\n      att
          *= saturate(spotAtt);\n    #endif\n  #endif\n  att *= 0.5; // passed in
          light colors are 2x brighter than what used to be in FFP\n  return min (computeLighting
          (idx, dirToLight, eyeNormal, viewDir, diffuseColor, shininess, att, specColor),
          1.0);\n}\n\n// uniforms\nhalf4 _Color;\nhalf4 _SpecColor;\nhalf4 _Emission;\nhalf
          _Shininess;\nint4 unity_VertexLightParams; // x: light count, y: zero, z:
          one (y/z needed by d3d9 vs loop instruction)\nfloat4 _MainTex_ST;\n\n//
          vertex shader input data\nstruct appdata {\n  float3 pos : POSITION;\n  float3
          normal : NORMAL;\n  float3 uv0 : TEXCOORD0;\n};\n\n// vertex-to-fragment
          interpolators\nstruct v2f {\n  fixed4 color : COLOR0;\n  #if ENABLE_SPECULAR\n
          \ fixed3 specColor : COLOR1;\n  #endif\n  float2 uv0 : TEXCOORD0;\n  #if
          USING_FOG\n    fixed fog : TEXCOORD1;\n  #endif\n  float4 pos : SV_POSITION;\n};\n\n//
          vertex shader\nv2f vert (appdata IN) {\n  v2f o;\n  half4 color = half4(0,0,0,1.1);\n
          \ float3 eyePos = mul (UNITY_MATRIX_MV, float4(IN.pos,1)).xyz;\n  half3
          eyeNormal = normalize (mul ((float3x3)UNITY_MATRIX_IT_MV, IN.normal).xyz);\n
          \ half3 viewDir = 0.0;\n  viewDir = -normalize (eyePos);\n  // lighting\n
          \ half3 lcolor = _Emission.rgb + _Color.rgb * glstate_lightmodel_ambient.rgb;\n
          \ half3 specColor = 0.0;\n  half shininess = _Shininess * 128.0;\n  for
          (int il = 0; il < LIGHT_LOOP_LIMIT; ++il) {\n    lcolor += computeOneLight(il,
          eyePos, eyeNormal, viewDir, _Color, shininess, specColor);\n  }\n  color.rgb
          = lcolor.rgb;\n  color.a = _Color.a;\n  specColor *= _SpecColor.rgb;\n  o.color
          = saturate(color);\n  #if ENABLE_SPECULAR\n  o.specColor = saturate(specColor);\n
          \ #endif\n  // compute texture coordinates\n  o.uv0 = IN.uv0.xy * _MainTex_ST.xy
          + _MainTex_ST.zw;\n  // fog\n  #if USING_FOG\n    float fogCoord = length(eyePos.xyz);
          // radial fog distance\n    UNITY_CALC_FOG_FACTOR_RAW(fogCoord);\n    o.fog
          = saturate(unityFogFactor);\n  #endif\n  // transform position\n  o.pos
          = UnityObjectToClipPos(IN.pos);\n  return o;\n}\n\n// textures\nsampler2D
          _MainTex;\n\n// fragment shader\nfixed4 frag (v2f IN) : SV_Target {\n  fixed4
          col;\n  fixed4 tex, tmp0, tmp1, tmp2;\n  // SetTexture #0\n  tex = tex2D
          (_MainTex, IN.uv0.xy);\n  col.rgb = tex * IN.color;\n  col *= 2;\n  col.a
          = fixed4(1,1,1,1).a;\n  #if ENABLE_SPECULAR\n  // add specular color\n  col.rgb
          += IN.specColor;\n  #endif\n  // fog\n  #if USING_FOG\n    col.rgb = lerp
          (unity_FogColor.rgb, col.rgb, IN.fog);\n  #endif\n  return col;\n}\n\n//
          texenvs\n//! TexEnv0: 02010103 01060004 [_MainTex] [ffffffff]\n"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 00000000000000000000000000000000
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - - _
          - POINT
          - SPOT
        m_VariantsUser1:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        - - _
          - POINT
          - SPOT
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 0
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2: []
        m_TargetVariants3: []
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR POINT SPOT
        m_BuiltinKeywords: 
      154121:
        m_Code: "#line 244 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          target 3.0\n#pragma glsl\n#pragma debug\n#pragma exclude_renderers nomrt\n#pragma
          multi_compile_prepassfinal\n#pragma skip_variants FOG_LINEAR FOG_EXP FOG_EXP2\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n// Surface
          shader code generated based on:\n// vertex modifier: 'vert'\n// writes to
          per-pixel normal: no\n// writes to emission: no\n// writes to occlusion:
          no\n// needs world space reflection vector: no\n// needs world space normal
          vector: no\n// needs screen space position: no\n// needs world space position:
          no\n// needs view direction: no\n// needs world space view direction: no\n//
          needs world space position for lighting: YES\n// needs world space view
          direction for lighting: YES\n// needs world space view direction for lightmaps:
          no\n// needs vertex color: no\n// needs VFACE: no\n// passes tangent-to-world
          matrix to pixel shader: no\n// reads from normal: YES\n// 0 texcoords actually
          used\n#define UNITY_PASS_DEFERRED\n#include \"UnityCG.cginc\"\n#include
          \"Lighting.cginc\"\n#include \"UnityPBSLighting.cginc\"\n\n#define INTERNAL_DATA\n#define
          WorldReflectionVector(data,normal) data.worldRefl\n#define WorldNormalVector(data,normal)
          normal\n\n// Original surface shader snippet:\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n#line 26 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n\t\t//#pragma
          target 3.0\n\t\t//#pragma surface surf Standard vertex:vert\n\t\t//#pragma
          glsl\n\t\t//#pragma debug\n\n\n\n\t\tinline half4 unity_combine_darken_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn min(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_mul_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 * arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cburn_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn 1 - (1-arg1)/(arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_lburn_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 + arg2 - 1;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_lighten_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn max(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_screen_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          1- (1-arg1) * (1-arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cdodge_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1/(1-arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_ldodge_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 + arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_overlay_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg1 < 0.5)? arg1*arg2*2:
          1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_softl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (1-arg1)*arg1*arg2 + arg1*(1-
          (1-arg1)*(1-arg2));\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_hardl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? arg1*arg2*2:
          1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_vividl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? 1- (1-arg1)/(2*arg2+1e-5):
          arg1/(1-2*(arg2-0.5)+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_linearl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? arg1+(2*arg2)-1:
          arg1+2*(arg2-0.5);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_pinl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? min(arg1,
          2*arg2): max(arg1, 2*(arg2-0.5));\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_hardmix_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 1-arg1)? half(0):half(1);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_diff_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          abs(arg2-arg1);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_excl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 + arg2 - arg1*arg2*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_sub_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          max(arg2-arg1, 0.0);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_div_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 / (arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\n\n\t\tsampler2D
          Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform;\r\n\t\tsampler2D Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform;\r\n\n\n\t\tstruct
          Input \n\t\t{\n\t\t\thalf4 meshUV0;\r\n\n\t\t};\n\n\t\tvoid vert (inout
          appdata_full v, out Input o)\n\t\t{\n\t\t\tUNITY_INITIALIZE_OUTPUT(Input,o);\n\t\t\to.meshUV0
          = v.texcoord;\r\n\n\t\t}\n\t  \n\t\tvoid surf (Input IN, inout SurfaceOutputStandard
          o) \n\t\t{\n\t\t\tfloat4 Texture_5cae5849a2fd40bfbeb141cb5d0a1272 = tex2D
          (Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform, IN.meshUV0.xy);\r\n\t\t\tfloat4
          Texture_ebca1dce894a42a1b6a0bb68ee78ff27 = tex2D (Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform,
          IN.meshUV0.xy);\r\n\t\t\thalf4 CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output
          = unity_combine_softl_half (Texture_5cae5849a2fd40bfbeb141cb5d0a1272, Texture_ebca1dce894a42a1b6a0bb68ee78ff27);\r\n\t\t\to.Albedo
          = CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output;\r\n\n\t\t}\n\t\t\n\n//
          vertex-to-fragment interpolation data\nstruct v2f_surf {\n  float4 pos :
          SV_POSITION;\n  half3 worldNormal : TEXCOORD0;\n  float3 worldPos : TEXCOORD1;\n
          \ half4 custompack0 : TEXCOORD2; // meshUV0\n#ifndef DIRLIGHTMAP_OFF\n  half3
          viewDir : TEXCOORD3;\n#endif\n  float4 lmap : TEXCOORD4;\n#ifdef LIGHTMAP_OFF\n
          \ #if UNITY_SHOULD_SAMPLE_SH\n    half3 sh : TEXCOORD5; // SH\n  #endif\n#else\n
          \ #ifdef DIRLIGHTMAP_OFF\n    float4 lmapFadePos : TEXCOORD5;\n  #endif\n#endif\n
          \ UNITY_INSTANCE_ID\n};\n\n// vertex shader\nv2f_surf vert_surf (appdata_full
          v) {\n  UNITY_SETUP_INSTANCE_ID(v);\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ UNITY_TRANSFER_INSTANCE_ID(v,o);\n  Input customInputData;\n  vert (v,
          customInputData);\n  o.custompack0.xyzw = customInputData.meshUV0;\n  o.pos
          = UnityObjectToClipPos(v.vertex);\n  float3 worldPos = mul(unity_ObjectToWorld,
          v.vertex).xyz;\n  fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n
          \ o.worldPos = worldPos;\n  o.worldNormal = worldNormal;\n  float3 viewDirForLight
          = UnityWorldSpaceViewDir(worldPos);\n  #ifndef DIRLIGHTMAP_OFF\n  o.viewDir
          = viewDirForLight;\n  #endif\n#ifndef DYNAMICLIGHTMAP_OFF\n  o.lmap.zw =
          v.texcoord2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;\n#else\n
          \ o.lmap.zw = 0;\n#endif\n#ifndef LIGHTMAP_OFF\n  o.lmap.xy = v.texcoord1.xy
          * unity_LightmapST.xy + unity_LightmapST.zw;\n  #ifdef DIRLIGHTMAP_OFF\n
          \   o.lmapFadePos.xyz = (mul(unity_ObjectToWorld, v.vertex).xyz - unity_ShadowFadeCenterAndType.xyz)
          * unity_ShadowFadeCenterAndType.w;\n    o.lmapFadePos.w = (-UnityObjectToViewPos(v.vertex).z)
          * (1.0 - unity_ShadowFadeCenterAndType.w);\n  #endif\n#else\n  o.lmap.xy
          = 0;\n    #if UNITY_SHOULD_SAMPLE_SH\n      o.sh = 0;\n      o.sh = ShadeSHPerVertex
          (worldNormal, o.sh);\n    #endif\n#endif\n  return o;\n}\n#ifdef LIGHTMAP_ON\nfloat4
          unity_LightmapFade;\n#endif\nfixed4 unity_Ambient;\n\n// fragment shader\nvoid
          frag_surf (v2f_surf IN,\n    out half4 outGBuffer0 : SV_Target0,\n    out
          half4 outGBuffer1 : SV_Target1,\n    out half4 outGBuffer2 : SV_Target2,\n
          \   out half4 outEmission : SV_Target3) {\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.meshUV0.x = 1.0;\n  surfIN.meshUV0 = IN.custompack0.xyzw;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  fixed3 worldViewDir = normalize(UnityWorldSpaceViewDir(worldPos));\n
          \ #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutputStandard o = (SurfaceOutputStandard)0;\n
          \ #else\n  SurfaceOutputStandard o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission
          = 0.0;\n  o.Alpha = 0.0;\n  o.Occlusion = 1.0;\n  fixed3 normalWorldVertex
          = fixed3(0,0,1);\n  o.Normal = IN.worldNormal;\n  normalWorldVertex = IN.worldNormal;\n\n
          \ // call surface function\n  surf (surfIN, o);\nfixed3 originalNormal =
          o.Normal;\n  half atten = 1;\n\n  // Setup lighting environment\n  UnityGI
          gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI, gi);\n  gi.indirect.diffuse = 0;\n
          \ gi.indirect.specular = 0;\n  gi.light.color = 0;\n  gi.light.dir = half3(0,1,0);\n
          \ // Call GI (lightmaps/SH/reflections) lighting function\n  UnityGIInput
          giInput;\n  UNITY_INITIALIZE_OUTPUT(UnityGIInput, giInput);\n  giInput.light
          = gi.light;\n  giInput.worldPos = worldPos;\n  giInput.worldViewDir = worldViewDir;\n
          \ giInput.atten = atten;\n  #if defined(LIGHTMAP_ON) || defined(DYNAMICLIGHTMAP_ON)\n
          \   giInput.lightmapUV = IN.lmap;\n  #else\n    giInput.lightmapUV = 0.0;\n
          \ #endif\n  #if UNITY_SHOULD_SAMPLE_SH\n    giInput.ambient = IN.sh;\n  #else\n
          \   giInput.ambient.rgb = 0.0;\n  #endif\n  giInput.probeHDR[0] = unity_SpecCube0_HDR;\n
          \ giInput.probeHDR[1] = unity_SpecCube1_HDR;\n  LightingStandard_GI(o, giInput,
          gi);\n\n  // call lighting function to output g-buffer\n  outEmission =
          LightingStandard_Deferred (o, worldViewDir, gi, outGBuffer0, outGBuffer1,
          outGBuffer2);\n  #ifndef UNITY_HDR_ON\n  outEmission.rgb = exp2(-outEmission.rgb);\n
          \ #endif\n}\n\n"
        m_AssetPath: 
        m_PlatformMask: 4294958079
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 6b770516880c785ba927a487d9181c83
        m_IsGLSL: 0
        m_FromOther: 0
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin1:
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 2
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: DIRLIGHTMAP_COMBINED DIRLIGHTMAP_OFF DIRLIGHTMAP_SEPARATE
          DYNAMICLIGHTMAP_OFF DYNAMICLIGHTMAP_ON HDR_LIGHT_PREPASS_OFF LIGHTMAP_OFF
          LIGHTMAP_ON UNITY_HDR_ON
      172332:
        m_Code: "#line 110 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          skip_variants FOG_LINEAR FOG_EXP FOG_EXP2\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          writes to per-pixel normal: no\n// writes to emission: no\n// writes to
          occlusion: no\n// needs world space reflection vector: no\n// needs world
          space normal vector: no\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: no\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: no\n// needs world space view direction
          for lightmaps: no\n// needs vertex color: no\n// needs VFACE: no\n// passes
          tangent-to-world matrix to pixel shader: no\n// reads from normal: YES\n//
          0 texcoords actually used\n#define UNITY_PASS_PREPASSBASE\n#include \"UnityCG.cginc\"\n#include
          \"Lighting.cginc\"\n\n#define INTERNAL_DATA\n#define WorldReflectionVector(data,normal)
          data.worldRefl\n#define WorldNormalVector(data,normal) normal\n\n// Original
          surface shader snippet:\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line
          8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//#pragma
          surface surf Lambert\n\nsampler2D _MainTex;\nfixed4 _Color;\n\nstruct Input
          {\n\tfloat2 uv_MainTex;\n};\n\nvoid surf (Input IN, inout SurfaceOutput
          o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex) * _Color;\n\to.Albedo
          = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment interpolation data\nstruct
          v2f_surf {\n  float4 pos : SV_POSITION;\n  half3 worldNormal : TEXCOORD0;\n
          \ float3 worldPos : TEXCOORD1;\n  UNITY_INSTANCE_ID\n};\n\n// vertex shader\nv2f_surf
          vert_surf (appdata_full v) {\n  UNITY_SETUP_INSTANCE_ID(v);\n  v2f_surf
          o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n  UNITY_TRANSFER_INSTANCE_ID(v,o);\n
          \ o.pos = UnityObjectToClipPos(v.vertex);\n  float3 worldPos = mul(unity_ObjectToWorld,
          v.vertex).xyz;\n  fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n
          \ o.worldPos = worldPos;\n  o.worldNormal = worldNormal;\n  return o;\n}\n\n//
          fragment shader\nfixed4 frag_surf (v2f_surf IN) : SV_Target {\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.uv_MainTex.x = 1.0;\n  float3 worldPos = IN.worldPos;\n  #ifndef
          USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n
          \ #else\n    fixed3 lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef
          UNITY_COMPILER_HLSL\n  SurfaceOutput o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput
          o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n
          \ o.Alpha = 0.0;\n  o.Gloss = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n
          \ o.Normal = IN.worldNormal;\n  normalWorldVertex = IN.worldNormal;\n\n
          \ // call surface function\n  surf (surfIN, o);\n\n  // output normal and
          specular\n  fixed4 res;\n  res.rgb = o.Normal * 0.5 + 0.5;\n  res.a = o.Specular;\n
          \ return res;\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 4e213bc02b38190ad91b297cec9a67e8
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: 
      190511:
        m_Code: "#pragma vertex vert\n#pragma fragment frag\n#pragma target 2.0\n#include
          \"UnityCG.cginc\"\n#pragma multi_compile_fog\n#define USING_FOG (defined(FOG_LINEAR)
          || defined(FOG_EXP) || defined(FOG_EXP2))\n\n// uniforms\nfloat4 _MainTex_ST;\n\n//
          vertex shader input data\nstruct appdata {\n  float3 pos : POSITION;\n  float3
          uv1 : TEXCOORD1;\n  float3 uv0 : TEXCOORD0;\n};\n\n// vertex-to-fragment
          interpolators\nstruct v2f {\n  fixed4 color : COLOR0;\n  float2 uv0 : TEXCOORD0;\n
          \ float2 uv1 : TEXCOORD1;\n  #if USING_FOG\n    fixed fog : TEXCOORD2;\n
          \ #endif\n  float4 pos : SV_POSITION;\n};\n\n// vertex shader\nv2f vert
          (appdata IN) {\n  v2f o;\n  half4 color = half4(0,0,0,1.1);\n  float3 eyePos
          = mul (UNITY_MATRIX_MV, float4(IN.pos,1)).xyz;\n  half3 viewDir = 0.0;\n
          \ o.color = saturate(color);\n  // compute texture coordinates\n  o.uv0
          = IN.uv1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n  o.uv1 = IN.uv0.xy
          * _MainTex_ST.xy + _MainTex_ST.zw;\n  // fog\n  #if USING_FOG\n    float
          fogCoord = length(eyePos.xyz); // radial fog distance\n    UNITY_CALC_FOG_FACTOR_RAW(fogCoord);\n
          \   o.fog = saturate(unityFogFactor);\n  #endif\n  // transform position\n
          \ o.pos = UnityObjectToClipPos(IN.pos);\n  return o;\n}\n\n// textures\nsampler2D
          _MainTex;\nfixed4 _Color;\n\n// fragment shader\nfixed4 frag (v2f IN) :
          SV_Target {\n  fixed4 col;\n  fixed4 tex, tmp0, tmp1, tmp2;\n  // SetTexture
          #0\n  tex = UNITY_SAMPLE_TEX2D (unity_Lightmap, IN.uv0.xy);\n  col = tex
          * _Color;\n  // SetTexture #1\n  tex = tex2D (_MainTex, IN.uv1.xy);\n  col.rgb
          = tex * col;\n  col *= 2;\n  col.a = fixed4(1,1,1,1).a;\n  // fog\n  #if
          USING_FOG\n    col.rgb = lerp (unity_FogColor.rgb, col.rgb, IN.fog);\n  #endif\n
          \ return col;\n}\n\n// texenvs\n//! TexEnv0: 01010102 01010102 [unity_Lightmap]
          [_Color] usesLightmapST\n//! TexEnv1: 02010100 01060004 [_MainTex] [ffffffff]\n"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 00000000000000000000000000000000
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 0
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2: []
        m_TargetVariants3: []
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: 
      199450:
        m_Code: "#pragma vertex vert\n#pragma fragment frag\n#pragma target 2.0\n#include
          \"UnityCG.cginc\"\n#pragma multi_compile_fog\n#define USING_FOG (defined(FOG_LINEAR)
          || defined(FOG_EXP) || defined(FOG_EXP2))\n\n// uniforms\nfloat4 unity_Lightmap_ST;\nfloat4
          _MainTex_ST;\n\n// vertex shader input data\nstruct appdata {\n  float3
          pos : POSITION;\n  float3 uv1 : TEXCOORD1;\n  float3 uv0 : TEXCOORD0;\n};\n\n//
          vertex-to-fragment interpolators\nstruct v2f {\n  fixed4 color : COLOR0;\n
          \ float2 uv0 : TEXCOORD0;\n  float2 uv1 : TEXCOORD1;\n  float2 uv2 : TEXCOORD2;\n
          \ #if USING_FOG\n    fixed fog : TEXCOORD3;\n  #endif\n  float4 pos : SV_POSITION;\n};\n\n//
          vertex shader\nv2f vert (appdata IN) {\n  v2f o;\n  half4 color = half4(0,0,0,1.1);\n
          \ float3 eyePos = mul (UNITY_MATRIX_MV, float4(IN.pos,1)).xyz;\n  half3
          viewDir = 0.0;\n  o.color = saturate(color);\n  // compute texture coordinates\n
          \ o.uv0 = IN.uv1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n  o.uv1
          = IN.uv1.xy * unity_Lightmap_ST.xy + unity_Lightmap_ST.zw;\n  o.uv2 = IN.uv0.xy
          * _MainTex_ST.xy + _MainTex_ST.zw;\n  // fog\n  #if USING_FOG\n    float
          fogCoord = length(eyePos.xyz); // radial fog distance\n    UNITY_CALC_FOG_FACTOR_RAW(fogCoord);\n
          \   o.fog = saturate(unityFogFactor);\n  #endif\n  // transform position\n
          \ o.pos = UnityObjectToClipPos(IN.pos);\n  return o;\n}\n\n// textures\nsampler2D
          _MainTex;\nfixed4 _Color;\n\n// fragment shader\nfixed4 frag (v2f IN) :
          SV_Target {\n  fixed4 col;\n  fixed4 tex, tmp0, tmp1, tmp2;\n  // SetTexture
          #0\n  tex = UNITY_SAMPLE_TEX2D (unity_Lightmap, IN.uv0.xy);\n  col = tex
          * tex.a;\n  col *= 2;\n  // SetTexture #1\n  tex = UNITY_SAMPLE_TEX2D (unity_Lightmap,
          IN.uv1.xy);\n  col = col * _Color;\n  // SetTexture #2\n  tex = tex2D (_MainTex,
          IN.uv2.xy);\n  col.rgb = tex * col;\n  col *= 4;\n  col.a = fixed4(1,1,1,1).a;\n
          \ // fog\n  #if USING_FOG\n    col.rgb = lerp (unity_FogColor.rgb, col.rgb,
          IN.fog);\n  #endif\n  return col;\n}\n\n// texenvs\n//! TexEnv0: 02010105
          02010105 [unity_Lightmap] usesLightmapST\n//! TexEnv1: 01000102 01000102
          [unity_Lightmap] [_Color]\n//! TexEnv2: 04010100 01060004 [_MainTex] [ffffffff]\n"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 00000000000000000000000000000000
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - _
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 0
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2: []
        m_TargetVariants3: []
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: 
      244281:
        m_Code: "#line 305 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          target 3.0\n#pragma glsl\n#pragma debug\n#pragma skip_variants FOG_LINEAR
          FOG_EXP FOG_EXP2\n#pragma skip_variants INSTANCING_ON\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          vertex modifier: 'vert'\n// writes to per-pixel normal: no\n// writes to
          emission: no\n// writes to occlusion: no\n// needs world space reflection
          vector: no\n// needs world space normal vector: no\n// needs screen space
          position: no\n// needs world space position: no\n// needs view direction:
          no\n// needs world space view direction: no\n// needs world space position
          for lighting: YES\n// needs world space view direction for lighting: YES\n//
          needs world space view direction for lightmaps: no\n// needs vertex color:
          no\n// needs VFACE: no\n// passes tangent-to-world matrix to pixel shader:
          no\n// reads from normal: no\n// 0 texcoords actually used\n#define UNITY_PASS_META\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n#include \"UnityPBSLighting.cginc\"\n\n#define
          INTERNAL_DATA\n#define WorldReflectionVector(data,normal) data.worldRefl\n#define
          WorldNormalVector(data,normal) normal\n\n// Original surface shader snippet:\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line 26
          \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n\t\t//#pragma
          target 3.0\n\t\t//#pragma surface surf Standard vertex:vert\n\t\t//#pragma
          glsl\n\t\t//#pragma debug\n\n\n\n\t\tinline half4 unity_combine_darken_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn min(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_mul_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 * arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cburn_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn 1 - (1-arg1)/(arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_lburn_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 + arg2 - 1;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_lighten_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn max(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_screen_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          1- (1-arg1) * (1-arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cdodge_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1/(1-arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_ldodge_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          arg1 + arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_overlay_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg1 < 0.5)? arg1*arg2*2:
          1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_softl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (1-arg1)*arg1*arg2 + arg1*(1-
          (1-arg1)*(1-arg2));\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_hardl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? arg1*arg2*2:
          1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_vividl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? 1- (1-arg1)/(2*arg2+1e-5):
          arg1/(1-2*(arg2-0.5)+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_linearl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? arg1+(2*arg2)-1:
          arg1+2*(arg2-0.5);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_pinl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 0.5)? min(arg1,
          2*arg2): max(arg1, 2*(arg2-0.5));\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_hardmix_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg2 < 1-arg1)? half(0):half(1);\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_diff_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          abs(arg2-arg1);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_excl_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 + arg2 - arg1*arg2*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline
          half4 unity_combine_sub_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
          max(arg2-arg1, 0.0);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_div_half
          (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1 / (arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\n\n\t\tsampler2D
          Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform;\r\n\t\tsampler2D Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform;\r\n\n\n\t\tstruct
          Input \n\t\t{\n\t\t\thalf4 meshUV0;\r\n\n\t\t};\n\n\t\tvoid vert (inout
          appdata_full v, out Input o)\n\t\t{\n\t\t\tUNITY_INITIALIZE_OUTPUT(Input,o);\n\t\t\to.meshUV0
          = v.texcoord;\r\n\n\t\t}\n\t  \n\t\tvoid surf (Input IN, inout SurfaceOutputStandard
          o) \n\t\t{\n\t\t\tfloat4 Texture_5cae5849a2fd40bfbeb141cb5d0a1272 = tex2D
          (Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform, IN.meshUV0.xy);\r\n\t\t\tfloat4
          Texture_ebca1dce894a42a1b6a0bb68ee78ff27 = tex2D (Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform,
          IN.meshUV0.xy);\r\n\t\t\thalf4 CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output
          = unity_combine_softl_half (Texture_5cae5849a2fd40bfbeb141cb5d0a1272, Texture_ebca1dce894a42a1b6a0bb68ee78ff27);\r\n\t\t\to.Albedo
          = CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output;\r\n\n\t\t}\n\t\t\n#include
          \"UnityMetaPass.cginc\"\n\n// vertex-to-fragment interpolation data\nstruct
          v2f_surf {\n  float4 pos : SV_POSITION;\n  float3 worldPos : TEXCOORD0;\n
          \ half4 custompack0 : TEXCOORD1; // meshUV0\n};\n\n// vertex shader\nv2f_surf
          vert_surf (appdata_full v) {\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ Input customInputData;\n  vert (v, customInputData);\n  o.custompack0.xyzw
          = customInputData.meshUV0;\n  o.pos = UnityMetaVertexPosition(v.vertex,
          v.texcoord1.xy, v.texcoord2.xy, unity_LightmapST, unity_DynamicLightmapST);\n
          \ float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n  fixed3 worldNormal
          = UnityObjectToWorldNormal(v.normal);\n  o.worldPos = worldPos;\n  return
          o;\n}\n\n// fragment shader\nfixed4 frag_surf (v2f_surf IN) : SV_Target
          {\n  // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.meshUV0.x = 1.0;\n  surfIN.meshUV0 = IN.custompack0.xyzw;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutputStandard
          o = (SurfaceOutputStandard)0;\n  #else\n  SurfaceOutputStandard o;\n  #endif\n
          \ o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Alpha = 0.0;\n  o.Occlusion
          = 1.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n\n  // call surface
          function\n  surf (surfIN, o);\n  UnityMetaInput metaIN;\n  UNITY_INITIALIZE_OUTPUT(UnityMetaInput,
          metaIN);\n  metaIN.Albedo = o.Albedo;\n  metaIN.Emission = o.Emission;\n
          \ return UnityMetaFragment(metaIN);\n}\n\n"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 82487844744f812d77cba08ba48140b5
        m_IsGLSL: 0
        m_FromOther: 0
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 2
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: 
      248873:
        m_Code: "#line 94 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          multi_compile_fog\n#pragma multi_compile_prepassfinal\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n// Surface shader code generated based on:\n//
          writes to per-pixel normal: no\n// writes to emission: no\n// writes to
          occlusion: no\n// needs world space reflection vector: no\n// needs world
          space normal vector: no\n// needs screen space position: no\n// needs world
          space position: no\n// needs view direction: no\n// needs world space view
          direction: no\n// needs world space position for lighting: YES\n// needs
          world space view direction for lighting: no\n// needs world space view direction
          for lightmaps: no\n// needs vertex color: no\n// needs VFACE: no\n// passes
          tangent-to-world matrix to pixel shader: no\n// reads from normal: no\n//
          1 texcoords actually used\n//   float2 _MainTex\n#define UNITY_PASS_PREPASSFINAL\n#include
          \"UnityCG.cginc\"\n#include \"Lighting.cginc\"\n\n#define INTERNAL_DATA\n#define
          WorldReflectionVector(data,normal) data.worldRefl\n#define WorldNormalVector(data,normal)
          normal\n\n// Original surface shader snippet:\n#include \"HLSLSupport.cginc\"\n#include
          \"UnityShaderVariables.cginc\"\n#line 8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//#pragma
          surface surf Lambert\n\nsampler2D _MainTex;\nfixed4 _Color;\n\nstruct Input
          {\n\tfloat2 uv_MainTex;\n};\n\nvoid surf (Input IN, inout SurfaceOutput
          o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex) * _Color;\n\to.Albedo
          = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment interpolation data\nstruct
          v2f_surf {\n  float4 pos : SV_POSITION;\n  float2 pack0 : TEXCOORD0; //
          _MainTex\n  float3 worldPos : TEXCOORD1;\n  float4 screen : TEXCOORD2;\n
          \ float4 lmap : TEXCOORD3;\n#ifdef LIGHTMAP_OFF\n  float3 vlight : TEXCOORD4;\n#else\n#ifdef
          DIRLIGHTMAP_OFF\n  float4 lmapFadePos : TEXCOORD4;\n#endif\n#endif\n  UNITY_FOG_COORDS(5)\n
          \ #if !defined(LIGHTMAP_OFF) && defined(DIRLIGHTMAP_COMBINED)\n  fixed3
          tSpace0 : TEXCOORD6;\n  fixed3 tSpace1 : TEXCOORD7;\n  fixed3 tSpace2 :
          TEXCOORD8;\n  #endif\n  UNITY_INSTANCE_ID\n};\nfloat4 _MainTex_ST;\n\n//
          vertex shader\nv2f_surf vert_surf (appdata_full v) {\n  UNITY_SETUP_INSTANCE_ID(v);\n
          \ v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n  UNITY_TRANSFER_INSTANCE_ID(v,o);\n
          \ o.pos = UnityObjectToClipPos(v.vertex);\n  o.pack0.xy = TRANSFORM_TEX(v.texcoord,
          _MainTex);\n  float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n
          \ fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n  #if !defined(LIGHTMAP_OFF)
          && defined(DIRLIGHTMAP_COMBINED)\n  fixed3 worldTangent = UnityObjectToWorldDir(v.tangent.xyz);\n
          \ fixed tangentSign = v.tangent.w * unity_WorldTransformParams.w;\n  fixed3
          worldBinormal = cross(worldNormal, worldTangent) * tangentSign;\n  #endif\n
          \ #if !defined(LIGHTMAP_OFF) && defined(DIRLIGHTMAP_COMBINED)\n  o.tSpace0
          = float4(worldTangent.x, worldBinormal.x, worldNormal.x, worldPos.x);\n
          \ o.tSpace1 = float4(worldTangent.y, worldBinormal.y, worldNormal.y, worldPos.y);\n
          \ o.tSpace2 = float4(worldTangent.z, worldBinormal.z, worldNormal.z, worldPos.z);\n
          \ #endif\n  o.worldPos = worldPos;\n  o.screen = ComputeScreenPos (o.pos);\n#ifndef
          DYNAMICLIGHTMAP_OFF\n  o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy
          + unity_DynamicLightmapST.zw;\n#else\n  o.lmap.zw = 0;\n#endif\n#ifndef
          LIGHTMAP_OFF\n  o.lmap.xy = v.texcoord1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n
          \ #ifdef DIRLIGHTMAP_OFF\n    o.lmapFadePos.xyz = (mul(unity_ObjectToWorld,
          v.vertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w;\n
          \   o.lmapFadePos.w = (-UnityObjectToViewPos(v.vertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w);\n
          \ #endif\n#else\n  o.lmap.xy = 0;\n  float3 worldN = UnityObjectToWorldNormal(v.normal);\n
          \ o.vlight = ShadeSH9 (float4(worldN,1.0));\n#endif\n  UNITY_TRANSFER_FOG(o,o.pos);
          // pass fog coordinates to pixel shader\n  return o;\n}\nsampler2D _LightBuffer;\nsampler2D
          _CameraNormalsTexture;\n#ifdef LIGHTMAP_ON\nfloat4 unity_LightmapFade;\n#endif\nfixed4
          unity_Ambient;\n\n// fragment shader\nfixed4 frag_surf (v2f_surf IN) : SV_Target
          {\n  UNITY_SETUP_INSTANCE_ID(IN);\n  // prepare and unpack data\n  Input
          surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n  surfIN.uv_MainTex.x
          = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3 worldPos = IN.worldPos;\n
          \ #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir = normalize(UnityWorldSpaceLightDir(worldPos));\n
          \ #else\n    fixed3 lightDir = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef
          UNITY_COMPILER_HLSL\n  SurfaceOutput o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput
          o;\n  #endif\n  o.Albedo = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n
          \ o.Alpha = 0.0;\n  o.Gloss = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n\n
          \ // call surface function\n  surf (surfIN, o);\n  half4 light = tex2Dproj
          (_LightBuffer, UNITY_PROJ_COORD(IN.screen));\n#if defined (SHADER_API_MOBILE)\n
          \ light = max(light, half4(0.001, 0.001, 0.001, 0.001));\n#endif\n#ifndef
          UNITY_HDR_ON\n  light = -log2(light);\n#endif\n  #ifndef LIGHTMAP_OFF\n
          \   #ifdef DIRLIGHTMAP_OFF\n      // single lightmap\n      fixed4 lmtex
          = UNITY_SAMPLE_TEX2D(unity_Lightmap, IN.lmap.xy);\n      fixed3 lm = DecodeLightmap
          (lmtex);\n      light.rgb += lm;\n    #elif DIRLIGHTMAP_COMBINED\n      half4
          nspec = tex2Dproj (_CameraNormalsTexture, UNITY_PROJ_COORD(IN.screen));\n
          \     half3 normal = nspec.rgb * 2 - 1;\n      o.Normal = normalize(normal);\n
          \     // directional lightmaps\n      fixed4 lmtex = UNITY_SAMPLE_TEX2D(unity_Lightmap,
          IN.lmap.xy);\n      half4 lm = half4(DecodeLightmap(lmtex), 0);\n      light
          += lm;\n    #elif DIRLIGHTMAP_SEPARATE\n      // directional with specular
          - no support\n    #endif // DIRLIGHTMAP_OFF\n  #else\n    light.rgb += IN.vlight;\n
          \ #endif // !LIGHTMAP_OFF\n\n  #ifndef DYNAMICLIGHTMAP_OFF\n  fixed4 dynlmtex
          = UNITY_SAMPLE_TEX2D(unity_DynamicLightmap, IN.lmap.zw);\n  light.rgb +=
          DecodeRealtimeLightmap (dynlmtex);\n  #endif\n\n  half4 c = LightingLambert_PrePass
          (o, light);\n  UNITY_APPLY_FOG(IN.fogCoord, c); // apply fog\n  UNITY_OPAQUE_ALPHA(c.a);\n
          \ return c;\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 4e213bc02b38190ad91b297cec9a67e8
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser1:
        - - __
          - FOG_LINEAR
          - FOG_EXP
          - FOG_EXP2
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin1:
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: FOG_EXP FOG_EXP2 FOG_LINEAR
        m_BuiltinKeywords: DIRLIGHTMAP_COMBINED DIRLIGHTMAP_OFF DIRLIGHTMAP_SEPARATE
          DYNAMICLIGHTMAP_OFF DYNAMICLIGHTMAP_ON HDR_LIGHT_PREPASS_OFF LIGHTMAP_OFF
          LIGHTMAP_ON UNITY_HDR_ON
      314043:
        m_Code: "#line 173 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          exclude_renderers nomrt\n#pragma multi_compile_prepassfinal\n#pragma skip_variants
          FOG_LINEAR FOG_EXP FOG_EXP2\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n//
          Surface shader code generated based on:\n// writes to per-pixel normal:
          no\n// writes to emission: no\n// writes to occlusion: no\n// needs world
          space reflection vector: no\n// needs world space normal vector: no\n//
          needs screen space position: no\n// needs world space position: no\n// needs
          view direction: no\n// needs world space view direction: no\n// needs world
          space position for lighting: YES\n// needs world space view direction for
          lighting: no\n// needs world space view direction for lightmaps: no\n//
          needs vertex color: no\n// needs VFACE: no\n// passes tangent-to-world matrix
          to pixel shader: no\n// reads from normal: YES\n// 1 texcoords actually
          used\n//   float2 _MainTex\n#define UNITY_PASS_DEFERRED\n#include \"UnityCG.cginc\"\n#include
          \"Lighting.cginc\"\n\n#define INTERNAL_DATA\n#define WorldReflectionVector(data,normal)
          data.worldRefl\n#define WorldNormalVector(data,normal) normal\n\n// Original
          surface shader snippet:\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line
          8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//#pragma
          surface surf Lambert\n\nsampler2D _MainTex;\nfixed4 _Color;\n\nstruct Input
          {\n\tfloat2 uv_MainTex;\n};\n\nvoid surf (Input IN, inout SurfaceOutput
          o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex) * _Color;\n\to.Albedo
          = c.rgb;\n\to.Alpha = c.a;\n}\n\n\n// vertex-to-fragment interpolation data\nstruct
          v2f_surf {\n  float4 pos : SV_POSITION;\n  float2 pack0 : TEXCOORD0; //
          _MainTex\n  half3 worldNormal : TEXCOORD1;\n  float3 worldPos : TEXCOORD2;\n
          \ float4 lmap : TEXCOORD3;\n#ifdef LIGHTMAP_OFF\n  #if UNITY_SHOULD_SAMPLE_SH\n
          \   half3 sh : TEXCOORD4; // SH\n  #endif\n#else\n  #ifdef DIRLIGHTMAP_OFF\n
          \   float4 lmapFadePos : TEXCOORD4;\n  #endif\n#endif\n  UNITY_INSTANCE_ID\n};\nfloat4
          _MainTex_ST;\n\n// vertex shader\nv2f_surf vert_surf (appdata_full v) {\n
          \ UNITY_SETUP_INSTANCE_ID(v);\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ UNITY_TRANSFER_INSTANCE_ID(v,o);\n  o.pos = UnityObjectToClipPos(v.vertex);\n
          \ o.pack0.xy = TRANSFORM_TEX(v.texcoord, _MainTex);\n  float3 worldPos =
          mul(unity_ObjectToWorld, v.vertex).xyz;\n  fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n
          \ o.worldPos = worldPos;\n  o.worldNormal = worldNormal;\n#ifndef DYNAMICLIGHTMAP_OFF\n
          \ o.lmap.zw = v.texcoord2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;\n#else\n
          \ o.lmap.zw = 0;\n#endif\n#ifndef LIGHTMAP_OFF\n  o.lmap.xy = v.texcoord1.xy
          * unity_LightmapST.xy + unity_LightmapST.zw;\n  #ifdef DIRLIGHTMAP_OFF\n
          \   o.lmapFadePos.xyz = (mul(unity_ObjectToWorld, v.vertex).xyz - unity_ShadowFadeCenterAndType.xyz)
          * unity_ShadowFadeCenterAndType.w;\n    o.lmapFadePos.w = (-UnityObjectToViewPos(v.vertex).z)
          * (1.0 - unity_ShadowFadeCenterAndType.w);\n  #endif\n#else\n  o.lmap.xy
          = 0;\n    #if UNITY_SHOULD_SAMPLE_SH\n      o.sh = 0;\n      o.sh = ShadeSHPerVertex
          (worldNormal, o.sh);\n    #endif\n#endif\n  return o;\n}\n#ifdef LIGHTMAP_ON\nfloat4
          unity_LightmapFade;\n#endif\nfixed4 unity_Ambient;\n\n// fragment shader\nvoid
          frag_surf (v2f_surf IN,\n    out half4 outGBuffer0 : SV_Target0,\n    out
          half4 outGBuffer1 : SV_Target1,\n    out half4 outGBuffer2 : SV_Target2,\n
          \   out half4 outEmission : SV_Target3) {\n  UNITY_SETUP_INSTANCE_ID(IN);\n
          \ // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.uv_MainTex.x = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutput
          o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput o;\n  #endif\n  o.Albedo
          = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n  o.Alpha = 0.0;\n  o.Gloss
          = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n  o.Normal = IN.worldNormal;\n
          \ normalWorldVertex = IN.worldNormal;\n\n  // call surface function\n  surf
          (surfIN, o);\nfixed3 originalNormal = o.Normal;\n  half atten = 1;\n\n  //
          Setup lighting environment\n  UnityGI gi;\n  UNITY_INITIALIZE_OUTPUT(UnityGI,
          gi);\n  gi.indirect.diffuse = 0;\n  gi.indirect.specular = 0;\n  gi.light.color
          = 0;\n  gi.light.dir = half3(0,1,0);\n  // Call GI (lightmaps/SH/reflections)
          lighting function\n  UnityGIInput giInput;\n  UNITY_INITIALIZE_OUTPUT(UnityGIInput,
          giInput);\n  giInput.light = gi.light;\n  giInput.worldPos = worldPos;\n
          \ giInput.atten = atten;\n  #if defined(LIGHTMAP_ON) || defined(DYNAMICLIGHTMAP_ON)\n
          \   giInput.lightmapUV = IN.lmap;\n  #else\n    giInput.lightmapUV = 0.0;\n
          \ #endif\n  #if UNITY_SHOULD_SAMPLE_SH\n    giInput.ambient = IN.sh;\n  #else\n
          \   giInput.ambient.rgb = 0.0;\n  #endif\n  giInput.probeHDR[0] = unity_SpecCube0_HDR;\n
          \ giInput.probeHDR[1] = unity_SpecCube1_HDR;\n  LightingLambert_GI(o, giInput,
          gi);\n\n  // call lighting function to output g-buffer\n  outEmission =
          LightingLambert_Deferred (o, gi, outGBuffer0, outGBuffer1, outGBuffer2);\n
          \ #ifndef UNITY_HDR_ON\n  outEmission.rgb = exp2(-outEmission.rgb);\n  #endif\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294958079
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 4e213bc02b38190ad91b297cec9a67e8
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0:
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin1:
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - HDR_LIGHT_PREPASS_OFF
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_OFF
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_COMBINED
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_OFF
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_OFF
          - UNITY_HDR_ON
        - - LIGHTMAP_ON
          - DIRLIGHTMAP_SEPARATE
          - DYNAMICLIGHTMAP_ON
          - UNITY_HDR_ON
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: DIRLIGHTMAP_COMBINED DIRLIGHTMAP_OFF DIRLIGHTMAP_SEPARATE
          DYNAMICLIGHTMAP_OFF DYNAMICLIGHTMAP_ON HDR_LIGHT_PREPASS_OFF LIGHTMAP_OFF
          LIGHTMAP_ON UNITY_HDR_ON
      369209:
        m_Code: "#line 163 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//
          compile directives\n#pragma vertex vert_surf\n#pragma fragment frag_surf\n#pragma
          skip_variants FOG_LINEAR FOG_EXP FOG_EXP2\n#pragma skip_variants INSTANCING_ON\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n// Surface
          shader code generated based on:\n// writes to per-pixel normal: no\n// writes
          to emission: no\n// writes to occlusion: no\n// needs world space reflection
          vector: no\n// needs world space normal vector: no\n// needs screen space
          position: no\n// needs world space position: no\n// needs view direction:
          no\n// needs world space view direction: no\n// needs world space position
          for lighting: YES\n// needs world space view direction for lighting: no\n//
          needs world space view direction for lightmaps: no\n// needs vertex color:
          no\n// needs VFACE: no\n// passes tangent-to-world matrix to pixel shader:
          no\n// reads from normal: no\n// 1 texcoords actually used\n//   float2
          _MainTex\n#define UNITY_PASS_META\n#include \"UnityCG.cginc\"\n#include
          \"Lighting.cginc\"\n\n#define INTERNAL_DATA\n#define WorldReflectionVector(data,normal)
          data.worldRefl\n#define WorldNormalVector(data,normal) normal\n\n// Original
          surface shader snippet:\n#include \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line
          8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n//#pragma
          surface surf Lambert\n\nsampler2D _MainTex;\nfixed4 _Color;\n\nstruct Input
          {\n\tfloat2 uv_MainTex;\n};\n\nvoid surf (Input IN, inout SurfaceOutput
          o) {\n\tfixed4 c = tex2D(_MainTex, IN.uv_MainTex) * _Color;\n\to.Albedo
          = c.rgb;\n\to.Alpha = c.a;\n}\n\n#include \"UnityMetaPass.cginc\"\n\n//
          vertex-to-fragment interpolation data\nstruct v2f_surf {\n  float4 pos :
          SV_POSITION;\n  float2 pack0 : TEXCOORD0; // _MainTex\n  float3 worldPos
          : TEXCOORD1;\n};\nfloat4 _MainTex_ST;\n\n// vertex shader\nv2f_surf vert_surf
          (appdata_full v) {\n  v2f_surf o;\n  UNITY_INITIALIZE_OUTPUT(v2f_surf,o);\n
          \ o.pos = UnityMetaVertexPosition(v.vertex, v.texcoord1.xy, v.texcoord2.xy,
          unity_LightmapST, unity_DynamicLightmapST);\n  o.pack0.xy = TRANSFORM_TEX(v.texcoord,
          _MainTex);\n  float3 worldPos = mul(unity_ObjectToWorld, v.vertex).xyz;\n
          \ fixed3 worldNormal = UnityObjectToWorldNormal(v.normal);\n  o.worldPos
          = worldPos;\n  return o;\n}\n\n// fragment shader\nfixed4 frag_surf (v2f_surf
          IN) : SV_Target {\n  // prepare and unpack data\n  Input surfIN;\n  UNITY_INITIALIZE_OUTPUT(Input,surfIN);\n
          \ surfIN.uv_MainTex.x = 1.0;\n  surfIN.uv_MainTex = IN.pack0.xy;\n  float3
          worldPos = IN.worldPos;\n  #ifndef USING_DIRECTIONAL_LIGHT\n    fixed3 lightDir
          = normalize(UnityWorldSpaceLightDir(worldPos));\n  #else\n    fixed3 lightDir
          = _WorldSpaceLightPos0.xyz;\n  #endif\n  #ifdef UNITY_COMPILER_HLSL\n  SurfaceOutput
          o = (SurfaceOutput)0;\n  #else\n  SurfaceOutput o;\n  #endif\n  o.Albedo
          = 0.0;\n  o.Emission = 0.0;\n  o.Specular = 0.0;\n  o.Alpha = 0.0;\n  o.Gloss
          = 0.0;\n  fixed3 normalWorldVertex = fixed3(0,0,1);\n\n  // call surface
          function\n  surf (surfIN, o);\n  UnityMetaInput metaIN;\n  UNITY_INITIALIZE_OUTPUT(UnityMetaInput,
          metaIN);\n  metaIN.Albedo = o.Albedo;\n  metaIN.Emission = o.Emission;\n
          \ return UnityMetaFragment(metaIN);\n}\n\n"
        m_AssetPath: Assets/DefaultResourcesExtra
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: e89040d13feb825a73f359d7158d9470
        m_IsGLSL: 0
        m_FromOther: 1
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: 
    m_MeshComponentsFromSnippets: 11
    m_HasSurfaceShaders: 1
    m_HasFixedFunctionShaders: 0
--- !u!48 &48000011576325190
Shader:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_Name: 
  decompressedSize: 0
  m_SubProgramBlob: 
  m_ParsedForm:
    m_PropInfo:
      m_Props:
      - m_Name: Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform
        m_Description: Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: white
          m_TexDim: 2
    m_SubShaders:
    - m_Passes:
      - m_Type: 0
        m_State:
          m_Name: 
          zTest:
            val: 4
            name:
              name: <noninit>
          zWrite:
            val: 1
            name:
              name: <noninit>
          alphaTest: 0
          alphaVal:
            val: 0
            name:
              name: <noninit>
          shininess:
            val: 0
            name:
              name: <noninit>
          culling:
            val: 2
            name:
              name: <noninit>
          offsetFactor:
            val: 0
            name:
              name: <noninit>
          offsetUnits:
            val: 0
            name:
              name: <noninit>
          alphaToMask:
            val: 0
            name:
              name: <noninit>
          srcBlend:
            val: 1
            name:
              name: <noninit>
          destBlend:
            val: 0
            name:
              name: <noninit>
          srcBlendAlpha:
            val: 1
            name:
              name: <noninit>
          destBlendAlpha:
            val: 0
            name:
              name: <noninit>
          blendOp:
            val: 0
            name:
              name: <noninit>
          blendOpAlpha:
            val: 0
            name:
              name: <noninit>
          colMask:
            val: 15
            name:
              name: <noninit>
          color:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1.1
              name:
                name: <noninit>
            name:
              name: <noninit>
          diffuse:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          ambient:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          specular:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          emissive:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          lighting: 0
          separateSpecular: 0
          stencilOp:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilReadMask:
            val: 255
            name:
              name: <noninit>
          stencilWriteMask:
            val: 255
            name:
              name: <noninit>
          stencilRef:
            val: 0
            name:
              name: <noninit>
          fogStart:
            val: 0
            name:
              name: unity_FogStart
          fogEnd:
            val: 0
            name:
              name: unity_FogEnd
          fogDensity:
            val: 0
            name:
              name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 0
              name:
                name: <noninit>
            name:
              name: unity_FogColor
          fogMode: -1
          gpuProgramID: 56687
          m_ColorMaterialMode: 0
          m_Channels:
            m_Channels[00]: -1
            m_Channels[01]: -1
            m_Channels[02]: -1
            m_Channels[03]: -1
            m_Channels[04]: -1
            m_Channels[05]: -1
            m_Channels[06]: -1
            m_Channels[07]: -1
            m_Channels[08]: -1
            m_Channels[09]: -1
            m_Channels[10]: -1
            m_Channels[11]: -1
            m_Channels[12]: -1
            m_Channels[13]: -1
            m_Channels[14]: -1
            m_Channels[15]: -1
            m_Channels[16]: -1
            m_Channels[17]: -1
            m_Channels[18]: -1
            m_Channels[19]: -1
            m_Channels[20]: -1
            m_Channels[21]: -1
            m_Channels[22]: -1
            m_Channels[23]: -1
            m_Channels[24]: -1
            m_Channels[25]: -1
            m_Channels[26]: -1
            m_Channels[27]: -1
            m_TargetMap: 0
            m_SourceMap: 0
          m_Tags:
            tags: {}
          m_LOD: 0
        m_ProgramMask: 6
        m_Programs[Vertex]:
          m_SubPrograms: []
        m_Programs[Fragment]:
          m_SubPrograms: []
        m_Programs[Geometry]:
          m_SubPrograms: []
        m_Programs[Hull]:
          m_SubPrograms: []
        m_Programs[Domain]:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      m_Tags:
        tags: {}
      m_LOD: 0
    m_Name: Hidden/PreviewShader/Texture_ebca1dce894a42a1b6a0bb68ee78ff27
    m_CustomEditorName: 
    m_FallbackName: 
    m_Dependencies: []
    m_DisableNoSubshadersMessage: 1
  m_Dependencies: []
  m_NonModifiableTextures: {}
  m_ShaderIsBaked: 0
  m_DefaultTextures: {}
  m_CompileInfo:
    m_Snippets:
      56687:
        m_Code: "#line 7 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line 7
          \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n\t\t\t#pragma
          vertex vert\n\t\t\t#pragma fragment frag\n\t\t\t#include \"UnityCG.cginc\"\n\n\n\t\t\tsampler2D
          Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform;\r\n\n\n\t\t\tstruct v2f
          \n\t\t\t{\n\t\t\t\tfloat4 pos : SV_POSITION;\n\t\t\t\thalf4 meshUV0 : TEXCOORD0;\r\n\n\t\t\t};\n\n\n\n\n\t\t\tv2f
          vert (appdata_full v) \n\t\t\t{\n\t\t\t\tv2f o = (v2f)0;\n\t\t\t\to.pos
          = mul (UNITY_MATRIX_MVP, v.vertex);\n\t\t\t\to.meshUV0 = v.texcoord;\r\n\n\t\t\t\treturn
          o;\n\t\t\t}\n\n\t\t\thalf4 frag (v2f IN) : COLOR\n\t\t\t{\n\t\t\t\tfloat4
          Texture_ebca1dce894a42a1b6a0bb68ee78ff27 = tex2D (Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform,
          IN.meshUV0.xy);\r\n\t\t\t\treturn Texture_ebca1dce894a42a1b6a0bb68ee78ff27;\r\n\n\t\t\t}\n\t\t\t"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 5bdbb5d85b2646f9bcc7c597e2e28782
        m_IsGLSL: 0
        m_FromOther: 0
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: 
    m_MeshComponentsFromSnippets: 9
    m_HasSurfaceShaders: 0
    m_HasFixedFunctionShaders: 0
--- !u!48 &48000011697123738
Shader:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_Name: 
  decompressedSize: 0
  m_SubProgramBlob: 
  m_ParsedForm:
    m_PropInfo:
      m_Props:
      - m_Name: Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform
        m_Description: Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: white
          m_TexDim: 2
    m_SubShaders:
    - m_Passes:
      - m_Type: 0
        m_State:
          m_Name: 
          zTest:
            val: 4
            name:
              name: <noninit>
          zWrite:
            val: 1
            name:
              name: <noninit>
          alphaTest: 0
          alphaVal:
            val: 0
            name:
              name: <noninit>
          shininess:
            val: 0
            name:
              name: <noninit>
          culling:
            val: 2
            name:
              name: <noninit>
          offsetFactor:
            val: 0
            name:
              name: <noninit>
          offsetUnits:
            val: 0
            name:
              name: <noninit>
          alphaToMask:
            val: 0
            name:
              name: <noninit>
          srcBlend:
            val: 1
            name:
              name: <noninit>
          destBlend:
            val: 0
            name:
              name: <noninit>
          srcBlendAlpha:
            val: 1
            name:
              name: <noninit>
          destBlendAlpha:
            val: 0
            name:
              name: <noninit>
          blendOp:
            val: 0
            name:
              name: <noninit>
          blendOpAlpha:
            val: 0
            name:
              name: <noninit>
          colMask:
            val: 15
            name:
              name: <noninit>
          color:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1.1
              name:
                name: <noninit>
            name:
              name: <noninit>
          diffuse:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          ambient:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          specular:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          emissive:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          lighting: 0
          separateSpecular: 0
          stencilOp:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilReadMask:
            val: 255
            name:
              name: <noninit>
          stencilWriteMask:
            val: 255
            name:
              name: <noninit>
          stencilRef:
            val: 0
            name:
              name: <noninit>
          fogStart:
            val: 0
            name:
              name: unity_FogStart
          fogEnd:
            val: 0
            name:
              name: unity_FogEnd
          fogDensity:
            val: 0
            name:
              name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 0
              name:
                name: <noninit>
            name:
              name: unity_FogColor
          fogMode: -1
          gpuProgramID: 40648
          m_ColorMaterialMode: 0
          m_Channels:
            m_Channels[00]: -1
            m_Channels[01]: -1
            m_Channels[02]: -1
            m_Channels[03]: -1
            m_Channels[04]: -1
            m_Channels[05]: -1
            m_Channels[06]: -1
            m_Channels[07]: -1
            m_Channels[08]: -1
            m_Channels[09]: -1
            m_Channels[10]: -1
            m_Channels[11]: -1
            m_Channels[12]: -1
            m_Channels[13]: -1
            m_Channels[14]: -1
            m_Channels[15]: -1
            m_Channels[16]: -1
            m_Channels[17]: -1
            m_Channels[18]: -1
            m_Channels[19]: -1
            m_Channels[20]: -1
            m_Channels[21]: -1
            m_Channels[22]: -1
            m_Channels[23]: -1
            m_Channels[24]: -1
            m_Channels[25]: -1
            m_Channels[26]: -1
            m_Channels[27]: -1
            m_TargetMap: 0
            m_SourceMap: 0
          m_Tags:
            tags: {}
          m_LOD: 0
        m_ProgramMask: 6
        m_Programs[Vertex]:
          m_SubPrograms: []
        m_Programs[Fragment]:
          m_SubPrograms: []
        m_Programs[Geometry]:
          m_SubPrograms: []
        m_Programs[Hull]:
          m_SubPrograms: []
        m_Programs[Domain]:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      m_Tags:
        tags: {}
      m_LOD: 0
    m_Name: Hidden/PreviewShader/Texture_5cae5849a2fd40bfbeb141cb5d0a1272
    m_CustomEditorName: 
    m_FallbackName: 
    m_Dependencies: []
    m_DisableNoSubshadersMessage: 1
  m_Dependencies: []
  m_NonModifiableTextures: {}
  m_ShaderIsBaked: 0
  m_DefaultTextures: {}
  m_CompileInfo:
    m_Snippets:
      40648:
        m_Code: "#line 7 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line 7
          \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n\t\t\t#pragma
          vertex vert\n\t\t\t#pragma fragment frag\n\t\t\t#include \"UnityCG.cginc\"\n\n\n\t\t\tsampler2D
          Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform;\r\n\n\n\t\t\tstruct v2f
          \n\t\t\t{\n\t\t\t\tfloat4 pos : SV_POSITION;\n\t\t\t\thalf4 meshUV0 : TEXCOORD0;\r\n\n\t\t\t};\n\n\n\n\n\t\t\tv2f
          vert (appdata_full v) \n\t\t\t{\n\t\t\t\tv2f o = (v2f)0;\n\t\t\t\to.pos
          = mul (UNITY_MATRIX_MVP, v.vertex);\n\t\t\t\to.meshUV0 = v.texcoord;\r\n\n\t\t\t\treturn
          o;\n\t\t\t}\n\n\t\t\thalf4 frag (v2f IN) : COLOR\n\t\t\t{\n\t\t\t\tfloat4
          Texture_5cae5849a2fd40bfbeb141cb5d0a1272 = tex2D (Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform,
          IN.meshUV0.xy);\r\n\t\t\t\treturn Texture_5cae5849a2fd40bfbeb141cb5d0a1272;\r\n\n\t\t\t}\n\t\t\t"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 5bdbb5d85b2646f9bcc7c597e2e28782
        m_IsGLSL: 0
        m_FromOther: 0
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: 
    m_MeshComponentsFromSnippets: 9
    m_HasSurfaceShaders: 0
    m_HasFixedFunctionShaders: 0
--- !u!48 &48000013509724362
Shader:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_Name: 
  decompressedSize: 0
  m_SubProgramBlob: 
  m_ParsedForm:
    m_PropInfo:
      m_Props:
      - m_Name: Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform
        m_Description: Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: white
          m_TexDim: 2
      - m_Name: Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform
        m_Description: Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform
        m_Attributes: []
        m_Type: 4
        m_Flags: 64
        m_DefValue[0]: 0
        m_DefValue[1]: 0
        m_DefValue[2]: 0
        m_DefValue[3]: 0
        m_DefTexture:
          m_DefaultName: white
          m_TexDim: 2
    m_SubShaders:
    - m_Passes:
      - m_Type: 0
        m_State:
          m_Name: 
          zTest:
            val: 4
            name:
              name: <noninit>
          zWrite:
            val: 1
            name:
              name: <noninit>
          alphaTest: 0
          alphaVal:
            val: 0
            name:
              name: <noninit>
          shininess:
            val: 0
            name:
              name: <noninit>
          culling:
            val: 2
            name:
              name: <noninit>
          offsetFactor:
            val: 0
            name:
              name: <noninit>
          offsetUnits:
            val: 0
            name:
              name: <noninit>
          alphaToMask:
            val: 0
            name:
              name: <noninit>
          srcBlend:
            val: 1
            name:
              name: <noninit>
          destBlend:
            val: 0
            name:
              name: <noninit>
          srcBlendAlpha:
            val: 1
            name:
              name: <noninit>
          destBlendAlpha:
            val: 0
            name:
              name: <noninit>
          blendOp:
            val: 0
            name:
              name: <noninit>
          blendOpAlpha:
            val: 0
            name:
              name: <noninit>
          colMask:
            val: 15
            name:
              name: <noninit>
          color:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1.1
              name:
                name: <noninit>
            name:
              name: <noninit>
          diffuse:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          ambient:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          specular:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          emissive:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 1
              name:
                name: <noninit>
            name:
              name: <noninit>
          lighting: 0
          separateSpecular: 0
          stencilOp:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpFront:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilOpBack:
            pass:
              val: 0
              name:
                name: <noninit>
            fail:
              val: 0
              name:
                name: <noninit>
            zFail:
              val: 0
              name:
                name: <noninit>
            comp:
              val: 8
              name:
                name: <noninit>
          stencilReadMask:
            val: 255
            name:
              name: <noninit>
          stencilWriteMask:
            val: 255
            name:
              name: <noninit>
          stencilRef:
            val: 0
            name:
              name: <noninit>
          fogStart:
            val: 0
            name:
              name: unity_FogStart
          fogEnd:
            val: 0
            name:
              name: unity_FogEnd
          fogDensity:
            val: 0
            name:
              name: unity_FogDensity
          fogColor:
            x:
              val: 0
              name:
                name: <noninit>
            y:
              val: 0
              name:
                name: <noninit>
            z:
              val: 0
              name:
                name: <noninit>
            w:
              val: 0
              name:
                name: <noninit>
            name:
              name: unity_FogColor
          fogMode: -1
          gpuProgramID: 21579
          m_ColorMaterialMode: 0
          m_Channels:
            m_Channels[00]: -1
            m_Channels[01]: -1
            m_Channels[02]: -1
            m_Channels[03]: -1
            m_Channels[04]: -1
            m_Channels[05]: -1
            m_Channels[06]: -1
            m_Channels[07]: -1
            m_Channels[08]: -1
            m_Channels[09]: -1
            m_Channels[10]: -1
            m_Channels[11]: -1
            m_Channels[12]: -1
            m_Channels[13]: -1
            m_Channels[14]: -1
            m_Channels[15]: -1
            m_Channels[16]: -1
            m_Channels[17]: -1
            m_Channels[18]: -1
            m_Channels[19]: -1
            m_Channels[20]: -1
            m_Channels[21]: -1
            m_Channels[22]: -1
            m_Channels[23]: -1
            m_Channels[24]: -1
            m_Channels[25]: -1
            m_Channels[26]: -1
            m_Channels[27]: -1
            m_TargetMap: 0
            m_SourceMap: 0
          m_Tags:
            tags: {}
          m_LOD: 0
        m_ProgramMask: 6
        m_Programs[Vertex]:
          m_SubPrograms: []
        m_Programs[Fragment]:
          m_SubPrograms: []
        m_Programs[Geometry]:
          m_SubPrograms: []
        m_Programs[Hull]:
          m_SubPrograms: []
        m_Programs[Domain]:
          m_SubPrograms: []
        m_HasInstancingVariant: 0
        m_UseName: 
        m_Name: 
        m_TextureName: 
        m_Tags:
          tags: {}
      m_Tags:
        tags: {}
      m_LOD: 0
    m_Name: Hidden/PreviewShader/CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output
    m_CustomEditorName: 
    m_FallbackName: 
    m_Dependencies: []
    m_DisableNoSubshadersMessage: 1
  m_Dependencies: []
  m_NonModifiableTextures: {}
  m_ShaderIsBaked: 0
  m_DefaultTextures: {}
  m_CompileInfo:
    m_Snippets:
      21579:
        m_Code: "#line 8 \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n#include
          \"HLSLSupport.cginc\"\n#include \"UnityShaderVariables.cginc\"\n#line 8
          \"\"\n#ifdef DUMMY_PREPROCESSOR_TO_WORK_AROUND_HLSL_COMPILER_LINE_HANDLING\n#endif\n\n\t\t\t#pragma
          vertex vert\n\t\t\t#pragma fragment frag\n\t\t\t#include \"UnityCG.cginc\"\n\n\n\t\t\tsampler2D
          Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform;\r\n\t\t\tsampler2D Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform;\r\n\n\n\t\t\tstruct
          v2f \n\t\t\t{\n\t\t\t\tfloat4 pos : SV_POSITION;\n\t\t\t\thalf4 meshUV0
          : TEXCOORD0;\r\n\n\t\t\t};\n\n\n\t\t\tinline half4 unity_combine_darken_half
          (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn min(arg1, arg2);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
          half4 unity_combine_mul_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          arg1 * arg2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_cburn_half
          (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn 1 - (1-arg1)/(arg2+1e-5);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
          half4 unity_combine_lburn_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          arg1 + arg2 - 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_lighten_half
          (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn max(arg1, arg2);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
          half4 unity_combine_screen_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          1- (1-arg1) * (1-arg2);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_cdodge_half
          (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn arg1/(1-arg2+1e-5);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
          half4 unity_combine_ldodge_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          arg1 + arg2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_overlay_half
          (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn (arg1 < 0.5)? arg1*arg2*2:
          1-(1-arg1)*(1-arg2)*2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_softl_half
          (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn (1-arg1)*arg1*arg2
          + arg1*(1- (1-arg1)*(1-arg2));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4
          unity_combine_hardl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          (arg2 < 0.5)? arg1*arg2*2: 1-(1-arg1)*(1-arg2)*2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
          half4 unity_combine_vividl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          (arg2 < 0.5)? 1- (1-arg1)/(2*arg2+1e-5): arg1/(1-2*(arg2-0.5)+1e-5);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
          half4 unity_combine_linearl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          (arg2 < 0.5)? arg1+(2*arg2)-1: arg1+2*(arg2-0.5);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
          half4 unity_combine_pinl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          (arg2 < 0.5)? min(arg1, 2*arg2): max(arg1, 2*(arg2-0.5));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
          half4 unity_combine_hardmix_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          (arg2 < 1-arg1)? half(0):half(1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4
          unity_combine_diff_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          abs(arg2-arg1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_excl_half
          (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn arg1 + arg2 - arg1*arg2*2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
          half4 unity_combine_sub_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
          max(arg2-arg1, 0.0);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_div_half
          (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn arg1 / (arg2+1e-5);\r\n\t\t\t}\r\n\t\t\t\r\n\n\n\t\t\tv2f
          vert (appdata_full v) \n\t\t\t{\n\t\t\t\tv2f o = (v2f)0;\n\t\t\t\to.pos
          = mul (UNITY_MATRIX_MVP, v.vertex);\n\t\t\t\to.meshUV0 = v.texcoord;\r\n\n\t\t\t\treturn
          o;\n\t\t\t}\n\n\t\t\thalf4 frag (v2f IN) : COLOR\n\t\t\t{\n\t\t\t\tfloat4
          Texture_5cae5849a2fd40bfbeb141cb5d0a1272 = tex2D (Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform,
          IN.meshUV0.xy);\r\n\t\t\t\tfloat4 Texture_ebca1dce894a42a1b6a0bb68ee78ff27
          = tex2D (Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform, IN.meshUV0.xy);\r\n\t\t\t\thalf4
          CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output = unity_combine_softl_half
          (Texture_5cae5849a2fd40bfbeb141cb5d0a1272, Texture_ebca1dce894a42a1b6a0bb68ee78ff27);\r\n\t\t\t\treturn
          CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output;\r\n\n\t\t\t}\n\t\t\t"
        m_AssetPath: 
        m_PlatformMask: 4294967295
        m_HardwareTierVariantsMask: 0
        m_TypesMask: 3
        m_IncludesHash:
          serializedVersion: 2
          Hash: 5bdbb5d85b2646f9bcc7c597e2e28782
        m_IsGLSL: 0
        m_FromOther: 0
        m_VariantsUser0: []
        m_VariantsUser1: []
        m_VariantsUser2: []
        m_VariantsUser3: []
        m_VariantsUser4: []
        m_VariantsUser5: []
        m_VariantsBuiltin0: []
        m_VariantsBuiltin1: []
        m_VariantsBuiltin2: []
        m_VariantsBuiltin3: []
        m_VariantsBuiltin4: []
        m_VariantsBuiltin5: []
        m_Target: 1
        m_TargetVariants0: []
        m_TargetVariants1: []
        m_TargetVariants2:
        - SHADOWS_SOFT
        - DIRLIGHTMAP_COMBINED
        - DIRLIGHTMAP_SEPARATE
        - DYNAMICLIGHTMAP_ON
        m_TargetVariants3:
        - INSTANCING_ON
        m_TargetVariants4: []
        m_TargetVariants5: []
        m_NonStrippedUserKeywords: 
        m_BuiltinKeywords: 
    m_MeshComponentsFromSnippets: 9
    m_HasSurfaceShaders: 0
    m_HasFixedFunctionShaders: 0
--- !u!114 &114000010503952950
MonoBehaviour:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 226075d30f5b2694caa212aa3e968148, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  nodes:
  - {fileID: 114000013912941646}
  - {fileID: 114000011572301608}
  - {fileID: 114000012764735352}
  - {fileID: 114000013750952198}
  edges:
  - m_FromNode: {fileID: 114000011572301608}
    m_ToNode: {fileID: 114000013912941646}
    m_FromSlotName: Output
    m_ToSlotName: Albedo
    color: {r: 1, g: 1, b: 1, a: 1}
  - m_FromNode: {fileID: 114000012764735352}
    m_ToNode: {fileID: 114000011572301608}
    m_FromSlotName: RGBA
    m_ToSlotName: Input1
    color: {r: 1, g: 1, b: 1, a: 1}
  - m_FromNode: {fileID: 114000013750952198}
    m_ToNode: {fileID: 114000011572301608}
    m_FromSlotName: RGBA
    m_ToSlotName: Input2
    color: {r: 1, g: 1, b: 1, a: 1}
  m_InvalidEdges: []
--- !u!114 &114000010751372870
MonoBehaviour:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: edd99bcf0936ee84794c384dffae5501, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  m_SrcBlend: 0
  m_DstBlend: 1
  m_CullMode: 0
  m_ZTest: 2
  m_ZWrite: 0
  m_RenderQueue: 1
  m_RenderType: 0
  m_ShadowPass: 0
  m_FullForwardShadows: 0
  m_NoAmbient: 0
  m_NoVertexLights: 0
  m_NoLightmaps: 0
  m_NoDirLightmap: 0
  m_NoForwardAdd: 0
  m_ApproxView: 0
  m_HalfAsView: 0
  m_Expanded: 0
--- !u!114 &114000011572301608
MonoBehaviour:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3738e97908dea1f4bbc5e5a7cf562ecc, type: 3}
  m_Name: CombineNode
  m_EditorClassIdentifier: 
  m_Slots:
  - type: 0
    m_Title: Input 1
    m_Name: Input1
    m_DataTypeString: 
  - type: 0
    m_Title: Input 2
    m_Name: Input2
    m_DataTypeString: 
  - type: 1
    m_Title: Output
    m_Name: Output
    m_DataTypeString: 
  m_Properties: []
  m_GenericTypeString: 
  color: 0
  style: node
  position:
    serializedVersion: 2
    x: 142.88483
    y: 42.17801
    width: 73
    height: -23
  showEmptySlots: 1
  m_SlotDefaultValues:
  - slotName: Input1
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Input1
      m_Node: {fileID: 114000011572301608}
  - slotName: Input2
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Input2
      m_Node: {fileID: 114000011572301608}
  - slotName: Output
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Output
      m_Node: {fileID: 114000011572301608}
  m_GUID: 4222ca57c75d43a49646f8c80bcf43a1
  m_DrawMode: 0
  m_PrecisionNames:
  - half
  m_LastShader: "Shader \"Hidden/PreviewShader/CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output\"
    {\n\tProperties {\n\t\t[NonModifiableTextureData] Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform(\"Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform\",
    2D) = \"white\" {}\n\t\t[NonModifiableTextureData] Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform(\"Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform\",
    2D) = \"white\" {}\n\n\t}\t\n\t\n\tSubShader {\n\t\tPass {\n\t\t\tCGPROGRAM\n\t\t\t#pragma
    vertex vert\n\t\t\t#pragma fragment frag\n\t\t\t#include \"UnityCG.cginc\"\n\n\n\t\t\tsampler2D
    Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform;\r\n\t\t\tsampler2D Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform;\r\n\n\n\t\t\tstruct
    v2f \n\t\t\t{\n\t\t\t\tfloat4 pos : SV_POSITION;\n\t\t\t\thalf4 meshUV0 : TEXCOORD0;\r\n\n\t\t\t};\n\n\n\t\t\tinline
    half4 unity_combine_darken_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    min(arg1, arg2);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_mul_half
    (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn arg1 * arg2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_cburn_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    1 - (1-arg1)/(arg2+1e-5);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_lburn_half
    (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn arg1 + arg2 - 1;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_lighten_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    max(arg1, arg2);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_screen_half
    (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn 1- (1-arg1) * (1-arg2);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_cdodge_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    arg1/(1-arg2+1e-5);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_ldodge_half
    (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn arg1 + arg2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_overlay_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    (arg1 < 0.5)? arg1*arg2*2: 1-(1-arg1)*(1-arg2)*2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_softl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    (1-arg1)*arg1*arg2 + arg1*(1- (1-arg1)*(1-arg2));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_hardl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    (arg2 < 0.5)? arg1*arg2*2: 1-(1-arg1)*(1-arg2)*2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_vividl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    (arg2 < 0.5)? 1- (1-arg1)/(2*arg2+1e-5): arg1/(1-2*(arg2-0.5)+1e-5);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_linearl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    (arg2 < 0.5)? arg1+(2*arg2)-1: arg1+2*(arg2-0.5);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_pinl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    (arg2 < 0.5)? min(arg1, 2*arg2): max(arg1, 2*(arg2-0.5));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_hardmix_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    (arg2 < 1-arg1)? half(0):half(1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_diff_half
    (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn abs(arg2-arg1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_excl_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    arg1 + arg2 - arg1*arg2*2;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline half4 unity_combine_sub_half
    (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn max(arg2-arg1, 0.0);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinline
    half4 unity_combine_div_half (half4 arg1, half4 arg2)\r\n\t\t\t{\r\n\t\t\t\treturn
    arg1 / (arg2+1e-5);\r\n\t\t\t}\r\n\t\t\t\r\n\n\n\t\t\tv2f vert (appdata_full v)
    \n\t\t\t{\n\t\t\t\tv2f o = (v2f)0;\n\t\t\t\to.pos = mul (UNITY_MATRIX_MVP, v.vertex);\n\t\t\t\to.meshUV0
    = v.texcoord;\r\n\n\t\t\t\treturn o;\n\t\t\t}\n\n\t\t\thalf4 frag (v2f IN) : COLOR\n\t\t\t{\n\t\t\t\tfloat4
    Texture_5cae5849a2fd40bfbeb141cb5d0a1272 = tex2D (Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform,
    IN.meshUV0.xy);\r\n\t\t\t\tfloat4 Texture_ebca1dce894a42a1b6a0bb68ee78ff27 = tex2D
    (Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform, IN.meshUV0.xy);\r\n\t\t\t\thalf4
    CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output = unity_combine_softl_half
    (Texture_5cae5849a2fd40bfbeb141cb5d0a1272, Texture_ebca1dce894a42a1b6a0bb68ee78ff27);\r\n\t\t\t\treturn
    CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output;\r\n\n\t\t\t}\n\t\t\tENDCG\n\t\t}\n\t}\n\tFallback
    Off\n}"
  m_PreviewShader: {fileID: 48000013509724362}
  m_PreviewMaterial: {fileID: 21000012188960002}
  m_Operation: 9
--- !u!114 &114000012764735352
MonoBehaviour:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 5defdf1d05185a343bfebb2cdd827bd6, type: 3}
  m_Name: Texture
  m_EditorClassIdentifier: 
  m_Slots:
  - type: 1
    m_Title: RGBA
    m_Name: RGBA
    m_DataTypeString: 
  - type: 1
    m_Title: R
    m_Name: R
    m_DataTypeString: 
  - type: 1
    m_Title: G
    m_Name: G
    m_DataTypeString: 
  - type: 1
    m_Title: B
    m_Name: B
    m_DataTypeString: 
  - type: 1
    m_Title: A
    m_Name: A
    m_DataTypeString: 
  - type: 0
    m_Title: UV
    m_Name: UV
    m_DataTypeString: 
  m_Properties: []
  m_GenericTypeString: 
  color: 0
  style: node
  position:
    serializedVersion: 2
    x: -228.5788
    y: -263.13635
    width: 81
    height: 392
  showEmptySlots: 1
  m_SlotDefaultValues:
  - slotName: RGBA
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: RGBA
      m_Node: {fileID: 114000012764735352}
  - slotName: R
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: R
      m_Node: {fileID: 114000012764735352}
  - slotName: G
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: G
      m_Node: {fileID: 114000012764735352}
  - slotName: B
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: B
      m_Node: {fileID: 114000012764735352}
  - slotName: A
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: A
      m_Node: {fileID: 114000012764735352}
  - slotName: UV
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: UV
      m_Node: {fileID: 114000012764735352}
  m_GUID: 5cae5849a2fd40bfbeb141cb5d0a1272
  m_DrawMode: 0
  m_PrecisionNames:
  - half
  m_LastShader: "Shader \"Hidden/PreviewShader/Texture_5cae5849a2fd40bfbeb141cb5d0a1272\"
    {\n\tProperties {\n\t\t[NonModifiableTextureData] Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform(\"Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform\",
    2D) = \"white\" {}\n\n\t}\t\n\t\n\tSubShader {\n\t\tPass {\n\t\t\tCGPROGRAM\n\t\t\t#pragma
    vertex vert\n\t\t\t#pragma fragment frag\n\t\t\t#include \"UnityCG.cginc\"\n\n\n\t\t\tsampler2D
    Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform;\r\n\n\n\t\t\tstruct v2f \n\t\t\t{\n\t\t\t\tfloat4
    pos : SV_POSITION;\n\t\t\t\thalf4 meshUV0 : TEXCOORD0;\r\n\n\t\t\t};\n\n\n\n\n\t\t\tv2f
    vert (appdata_full v) \n\t\t\t{\n\t\t\t\tv2f o = (v2f)0;\n\t\t\t\to.pos = mul
    (UNITY_MATRIX_MVP, v.vertex);\n\t\t\t\to.meshUV0 = v.texcoord;\r\n\n\t\t\t\treturn
    o;\n\t\t\t}\n\n\t\t\thalf4 frag (v2f IN) : COLOR\n\t\t\t{\n\t\t\t\tfloat4 Texture_5cae5849a2fd40bfbeb141cb5d0a1272
    = tex2D (Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform, IN.meshUV0.xy);\r\n\t\t\t\treturn
    Texture_5cae5849a2fd40bfbeb141cb5d0a1272;\r\n\n\t\t\t}\n\t\t\tENDCG\n\t\t}\n\t}\n\tFallback
    Off\n}"
  m_PreviewShader: {fileID: 48000011697123738}
  m_PreviewMaterial: {fileID: 21000012033016274}
  m_PropertyName: 
  m_Description: 
  m_Exposed: 0
  m_DefaultTexture: {fileID: 2800000, guid: 28bdf1ba8c076ef4e910b59cc1baf342, type: 3}
  m_TextureType: 0
--- !u!114 &114000013750952198
MonoBehaviour:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 5defdf1d05185a343bfebb2cdd827bd6, type: 3}
  m_Name: Texture
  m_EditorClassIdentifier: 
  m_Slots:
  - type: 1
    m_Title: RGBA
    m_Name: RGBA
    m_DataTypeString: 
  - type: 1
    m_Title: R
    m_Name: R
    m_DataTypeString: 
  - type: 1
    m_Title: G
    m_Name: G
    m_DataTypeString: 
  - type: 1
    m_Title: B
    m_Name: B
    m_DataTypeString: 
  - type: 1
    m_Title: A
    m_Name: A
    m_DataTypeString: 
  - type: 0
    m_Title: UV
    m_Name: UV
    m_DataTypeString: 
  m_Properties: []
  m_GenericTypeString: 
  color: 0
  style: node
  position:
    serializedVersion: 2
    x: -241.5788
    y: 172.86365
    width: 209
    height: 130
  showEmptySlots: 1
  m_SlotDefaultValues:
  - slotName: RGBA
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: RGBA
      m_Node: {fileID: 114000013750952198}
  - slotName: R
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: R
      m_Node: {fileID: 114000013750952198}
  - slotName: G
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: G
      m_Node: {fileID: 114000013750952198}
  - slotName: B
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: B
      m_Node: {fileID: 114000013750952198}
  - slotName: A
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: A
      m_Node: {fileID: 114000013750952198}
  - slotName: UV
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: UV
      m_Node: {fileID: 114000013750952198}
  m_GUID: ebca1dce894a42a1b6a0bb68ee78ff27
  m_DrawMode: 0
  m_PrecisionNames:
  - half
  m_LastShader: "Shader \"Hidden/PreviewShader/Texture_ebca1dce894a42a1b6a0bb68ee78ff27\"
    {\n\tProperties {\n\t\t[NonModifiableTextureData] Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform(\"Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform\",
    2D) = \"white\" {}\n\n\t}\t\n\t\n\tSubShader {\n\t\tPass {\n\t\t\tCGPROGRAM\n\t\t\t#pragma
    vertex vert\n\t\t\t#pragma fragment frag\n\t\t\t#include \"UnityCG.cginc\"\n\n\n\t\t\tsampler2D
    Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform;\r\n\n\n\t\t\tstruct v2f \n\t\t\t{\n\t\t\t\tfloat4
    pos : SV_POSITION;\n\t\t\t\thalf4 meshUV0 : TEXCOORD0;\r\n\n\t\t\t};\n\n\n\n\n\t\t\tv2f
    vert (appdata_full v) \n\t\t\t{\n\t\t\t\tv2f o = (v2f)0;\n\t\t\t\to.pos = mul
    (UNITY_MATRIX_MVP, v.vertex);\n\t\t\t\to.meshUV0 = v.texcoord;\r\n\n\t\t\t\treturn
    o;\n\t\t\t}\n\n\t\t\thalf4 frag (v2f IN) : COLOR\n\t\t\t{\n\t\t\t\tfloat4 Texture_ebca1dce894a42a1b6a0bb68ee78ff27
    = tex2D (Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform, IN.meshUV0.xy);\r\n\t\t\t\treturn
    Texture_ebca1dce894a42a1b6a0bb68ee78ff27;\r\n\n\t\t\t}\n\t\t\tENDCG\n\t\t}\n\t}\n\tFallback
    Off\n}"
  m_PreviewShader: {fileID: 48000011576325190}
  m_PreviewMaterial: {fileID: 21000011906202394}
  m_PropertyName: 
  m_Description: 
  m_Exposed: 0
  m_DefaultTexture: {fileID: 2800000, guid: 4c91c938176a28e44b22f5398fd5184f, type: 3}
  m_TextureType: 0
--- !u!114 &114000013912941646
MonoBehaviour:
  m_ObjectHideFlags: 1
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 38072936174514040b3e08813a3ec4e7, type: 3}
  m_Name: PixelMaster
  m_EditorClassIdentifier: 
  m_Slots:
  - type: 0
    m_Title: Albedo
    m_Name: Albedo
    m_DataTypeString: 
  - type: 0
    m_Title: Normal
    m_Name: Normal
    m_DataTypeString: 
  - type: 0
    m_Title: Emission
    m_Name: Emission
    m_DataTypeString: 
  - type: 0
    m_Title: Metallic
    m_Name: Metallic
    m_DataTypeString: 
  - type: 0
    m_Title: Smoothness
    m_Name: Smoothness
    m_DataTypeString: 
  - type: 0
    m_Title: Occlusion
    m_Name: Occlusion
    m_DataTypeString: 
  - type: 0
    m_Title: Alpha
    m_Name: Alpha
    m_DataTypeString: 
  m_Properties: []
  m_GenericTypeString: 
  color: 0
  style: node
  position:
    serializedVersion: 2
    x: 700
    y: 0
    width: 0
    height: 0
  showEmptySlots: 1
  m_SlotDefaultValues:
  - slotName: Albedo
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Albedo
      m_Node: {fileID: 114000013912941646}
  - slotName: Normal
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Normal
      m_Node: {fileID: 114000013912941646}
  - slotName: Emission
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Emission
      m_Node: {fileID: 114000013912941646}
  - slotName: Metallic
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Metallic
      m_Node: {fileID: 114000013912941646}
  - slotName: Smoothness
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Smoothness
      m_Node: {fileID: 114000013912941646}
  - slotName: Occlusion
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Occlusion
      m_Node: {fileID: 114000013912941646}
  - slotName: Alpha
    value:
      m_DefaultVector: {x: 1, y: 1, z: 1, w: 1}
      m_SlotName: Alpha
      m_Node: {fileID: 114000013912941646}
  m_GUID: 5c6daa356f294a8399fd930402180579
  m_DrawMode: 0
  m_PrecisionNames:
  - half
  m_LastShader: "Shader \"Graph/Hidden/PreviewShader/PixelMaster_5c6daa356f294a8399fd930402180579\"
    \n{\n\tProperties \n\t{\n\t\t[NonModifiableTextureData] Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform(\"Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform\",
    2D) = \"white\" {}\n\t\t[NonModifiableTextureData] Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform(\"Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform\",
    2D) = \"white\" {}\n\n\t}\t\n\t\n\tSubShader \n\t{\n\t\tTags {\r\n\t\t\t\"RenderType\"=\"Opaque\"\r\n\t\t\t\"Queue\"=\"Geometry\"\r\n\t\t}\r\n\n\t\tBlend
    One Zero\r\n\n\t\tCull Back\r\n\n\t\tZTest LEqual\r\n\n\t\tZWrite On\r\n\n\n\t\tLOD
    200\n\t\t\n\t\tCGPROGRAM\n\t\t#pragma target 3.0\n\t\t#pragma surface surf Standard
    vertex:vert\n\t\t#pragma glsl\n\t\t#pragma debug\n\n\n\n\t\tinline half4 unity_combine_darken_half
    (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn min(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_mul_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    arg1 * arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cburn_half (half4
    arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn 1 - (1-arg1)/(arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_lburn_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    arg1 + arg2 - 1;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_lighten_half
    (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn max(arg1, arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_screen_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    1- (1-arg1) * (1-arg2);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_cdodge_half
    (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn arg1/(1-arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_ldodge_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    arg1 + arg2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_overlay_half (half4
    arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn (arg1 < 0.5)? arg1*arg2*2: 1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_softl_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    (1-arg1)*arg1*arg2 + arg1*(1- (1-arg1)*(1-arg2));\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_hardl_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    (arg2 < 0.5)? arg1*arg2*2: 1-(1-arg1)*(1-arg2)*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_vividl_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    (arg2 < 0.5)? 1- (1-arg1)/(2*arg2+1e-5): arg1/(1-2*(arg2-0.5)+1e-5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_linearl_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    (arg2 < 0.5)? arg1+(2*arg2)-1: arg1+2*(arg2-0.5);\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_pinl_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    (arg2 < 0.5)? min(arg1, 2*arg2): max(arg1, 2*(arg2-0.5));\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_hardmix_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    (arg2 < 1-arg1)? half(0):half(1);\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_diff_half
    (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn abs(arg2-arg1);\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_excl_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    arg1 + arg2 - arg1*arg2*2;\r\n\t\t}\r\n\t\t\r\n\t\tinline half4 unity_combine_sub_half
    (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn max(arg2-arg1, 0.0);\r\n\t\t}\r\n\t\t\r\n\t\tinline
    half4 unity_combine_div_half (half4 arg1, half4 arg2)\r\n\t\t{\r\n\t\t\treturn
    arg1 / (arg2+1e-5);\r\n\t\t}\r\n\t\t\r\n\n\n\t\tsampler2D Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform;\r\n\t\tsampler2D
    Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform;\r\n\n\n\t\tstruct Input \n\t\t{\n\t\t\thalf4
    meshUV0;\r\n\n\t\t};\n\n\t\tvoid vert (inout appdata_full v, out Input o)\n\t\t{\n\t\t\tUNITY_INITIALIZE_OUTPUT(Input,o);\n\t\t\to.meshUV0
    = v.texcoord;\r\n\n\t\t}\n\t  \n\t\tvoid surf (Input IN, inout SurfaceOutputStandard
    o) \n\t\t{\n\t\t\tfloat4 Texture_5cae5849a2fd40bfbeb141cb5d0a1272 = tex2D (Texture_5cae5849a2fd40bfbeb141cb5d0a1272_Uniform,
    IN.meshUV0.xy);\r\n\t\t\tfloat4 Texture_ebca1dce894a42a1b6a0bb68ee78ff27 = tex2D
    (Texture_ebca1dce894a42a1b6a0bb68ee78ff27_Uniform, IN.meshUV0.xy);\r\n\t\t\thalf4
    CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output = unity_combine_softl_half
    (Texture_5cae5849a2fd40bfbeb141cb5d0a1272, Texture_ebca1dce894a42a1b6a0bb68ee78ff27);\r\n\t\t\to.Albedo
    = CombineNode_4222ca57c75d43a49646f8c80bcf43a1_Output;\r\n\n\t\t}\n\t\tENDCG\n\t}
    \n\tFallBack \"Diffuse\"\n}\n"
  m_PreviewShader: {fileID: 48000010157997568}
  m_PreviewMaterial: {fileID: 21000012785307104}
  m_LightFunctionClassName: UnityEditor.MaterialGraph.PBRMetalicLightFunction
